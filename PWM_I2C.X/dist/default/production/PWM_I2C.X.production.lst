

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sun Jun 11 20:38:48 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	12F1840
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 1.41
    33                           ; Generated 25/01/2017 GMT
    34                           ; 
    35                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC12F1840 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  008C                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0095                     	;# 
    96  0096                     	;# 
    97  0097                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009A                     	;# 
   101  009B                     	;# 
   102  009B                     	;# 
   103  009C                     	;# 
   104  009D                     	;# 
   105  009E                     	;# 
   106  010C                     	;# 
   107  0111                     	;# 
   108  0112                     	;# 
   109  0115                     	;# 
   110  0116                     	;# 
   111  0117                     	;# 
   112  0118                     	;# 
   113  0119                     	;# 
   114  011A                     	;# 
   115  011B                     	;# 
   116  011D                     	;# 
   117  011D                     	;# 
   118  018C                     	;# 
   119  0191                     	;# 
   120  0191                     	;# 
   121  0192                     	;# 
   122  0193                     	;# 
   123  0193                     	;# 
   124  0193                     	;# 
   125  0194                     	;# 
   126  0195                     	;# 
   127  0196                     	;# 
   128  0197                     	;# 
   129  0199                     	;# 
   130  019A                     	;# 
   131  019B                     	;# 
   132  019B                     	;# 
   133  019B                     	;# 
   134  019B                     	;# 
   135  019C                     	;# 
   136  019C                     	;# 
   137  019D                     	;# 
   138  019E                     	;# 
   139  019F                     	;# 
   140  020C                     	;# 
   141  0211                     	;# 
   142  0211                     	;# 
   143  0212                     	;# 
   144  0212                     	;# 
   145  0213                     	;# 
   146  0213                     	;# 
   147  0214                     	;# 
   148  0214                     	;# 
   149  0215                     	;# 
   150  0215                     	;# 
   151  0215                     	;# 
   152  0216                     	;# 
   153  0216                     	;# 
   154  0217                     	;# 
   155  0217                     	;# 
   156  0291                     	;# 
   157  0291                     	;# 
   158  0292                     	;# 
   159  0293                     	;# 
   160  0294                     	;# 
   161  0295                     	;# 
   162  0295                     	;# 
   163  0296                     	;# 
   164  0391                     	;# 
   165  0392                     	;# 
   166  0393                     	;# 
   167  039A                     	;# 
   168  039C                     	;# 
   169  039D                     	;# 
   170  039E                     	;# 
   171  039F                     	;# 
   172  0FE4                     	;# 
   173  0FE5                     	;# 
   174  0FE6                     	;# 
   175  0FE7                     	;# 
   176  0FE8                     	;# 
   177  0FE9                     	;# 
   178  0FEA                     	;# 
   179  0FEB                     	;# 
   180  0FED                     	;# 
   181  0FEE                     	;# 
   182  0FEF                     	;# 
   183  0000                     	;# 
   184  0001                     	;# 
   185  0002                     	;# 
   186  0003                     	;# 
   187  0004                     	;# 
   188  0005                     	;# 
   189  0006                     	;# 
   190  0007                     	;# 
   191  0008                     	;# 
   192  0009                     	;# 
   193  000A                     	;# 
   194  000B                     	;# 
   195  000C                     	;# 
   196  0011                     	;# 
   197  0012                     	;# 
   198  0015                     	;# 
   199  0016                     	;# 
   200  0016                     	;# 
   201  0017                     	;# 
   202  0018                     	;# 
   203  0019                     	;# 
   204  001A                     	;# 
   205  001B                     	;# 
   206  001C                     	;# 
   207  001E                     	;# 
   208  001F                     	;# 
   209  008C                     	;# 
   210  0091                     	;# 
   211  0092                     	;# 
   212  0095                     	;# 
   213  0096                     	;# 
   214  0097                     	;# 
   215  0098                     	;# 
   216  0099                     	;# 
   217  009A                     	;# 
   218  009B                     	;# 
   219  009B                     	;# 
   220  009C                     	;# 
   221  009D                     	;# 
   222  009E                     	;# 
   223  010C                     	;# 
   224  0111                     	;# 
   225  0112                     	;# 
   226  0115                     	;# 
   227  0116                     	;# 
   228  0117                     	;# 
   229  0118                     	;# 
   230  0119                     	;# 
   231  011A                     	;# 
   232  011B                     	;# 
   233  011D                     	;# 
   234  011D                     	;# 
   235  018C                     	;# 
   236  0191                     	;# 
   237  0191                     	;# 
   238  0192                     	;# 
   239  0193                     	;# 
   240  0193                     	;# 
   241  0193                     	;# 
   242  0194                     	;# 
   243  0195                     	;# 
   244  0196                     	;# 
   245  0197                     	;# 
   246  0199                     	;# 
   247  019A                     	;# 
   248  019B                     	;# 
   249  019B                     	;# 
   250  019B                     	;# 
   251  019B                     	;# 
   252  019C                     	;# 
   253  019C                     	;# 
   254  019D                     	;# 
   255  019E                     	;# 
   256  019F                     	;# 
   257  020C                     	;# 
   258  0211                     	;# 
   259  0211                     	;# 
   260  0212                     	;# 
   261  0212                     	;# 
   262  0213                     	;# 
   263  0213                     	;# 
   264  0214                     	;# 
   265  0214                     	;# 
   266  0215                     	;# 
   267  0215                     	;# 
   268  0215                     	;# 
   269  0216                     	;# 
   270  0216                     	;# 
   271  0217                     	;# 
   272  0217                     	;# 
   273  0291                     	;# 
   274  0291                     	;# 
   275  0292                     	;# 
   276  0293                     	;# 
   277  0294                     	;# 
   278  0295                     	;# 
   279  0295                     	;# 
   280  0296                     	;# 
   281  0391                     	;# 
   282  0392                     	;# 
   283  0393                     	;# 
   284  039A                     	;# 
   285  039C                     	;# 
   286  039D                     	;# 
   287  039E                     	;# 
   288  039F                     	;# 
   289  0FE4                     	;# 
   290  0FE5                     	;# 
   291  0FE6                     	;# 
   292  0FE7                     	;# 
   293  0FE8                     	;# 
   294  0FE9                     	;# 
   295  0FEA                     	;# 
   296  0FEB                     	;# 
   297  0FED                     	;# 
   298  0FEE                     	;# 
   299  0FEF                     	;# 
   300  0000                     	;# 
   301  0001                     	;# 
   302  0002                     	;# 
   303  0003                     	;# 
   304  0004                     	;# 
   305  0005                     	;# 
   306  0006                     	;# 
   307  0007                     	;# 
   308  0008                     	;# 
   309  0009                     	;# 
   310  000A                     	;# 
   311  000B                     	;# 
   312  000C                     	;# 
   313  0011                     	;# 
   314  0012                     	;# 
   315  0015                     	;# 
   316  0016                     	;# 
   317  0016                     	;# 
   318  0017                     	;# 
   319  0018                     	;# 
   320  0019                     	;# 
   321  001A                     	;# 
   322  001B                     	;# 
   323  001C                     	;# 
   324  001E                     	;# 
   325  001F                     	;# 
   326  008C                     	;# 
   327  0091                     	;# 
   328  0092                     	;# 
   329  0095                     	;# 
   330  0096                     	;# 
   331  0097                     	;# 
   332  0098                     	;# 
   333  0099                     	;# 
   334  009A                     	;# 
   335  009B                     	;# 
   336  009B                     	;# 
   337  009C                     	;# 
   338  009D                     	;# 
   339  009E                     	;# 
   340  010C                     	;# 
   341  0111                     	;# 
   342  0112                     	;# 
   343  0115                     	;# 
   344  0116                     	;# 
   345  0117                     	;# 
   346  0118                     	;# 
   347  0119                     	;# 
   348  011A                     	;# 
   349  011B                     	;# 
   350  011D                     	;# 
   351  011D                     	;# 
   352  018C                     	;# 
   353  0191                     	;# 
   354  0191                     	;# 
   355  0192                     	;# 
   356  0193                     	;# 
   357  0193                     	;# 
   358  0193                     	;# 
   359  0194                     	;# 
   360  0195                     	;# 
   361  0196                     	;# 
   362  0197                     	;# 
   363  0199                     	;# 
   364  019A                     	;# 
   365  019B                     	;# 
   366  019B                     	;# 
   367  019B                     	;# 
   368  019B                     	;# 
   369  019C                     	;# 
   370  019C                     	;# 
   371  019D                     	;# 
   372  019E                     	;# 
   373  019F                     	;# 
   374  020C                     	;# 
   375  0211                     	;# 
   376  0211                     	;# 
   377  0212                     	;# 
   378  0212                     	;# 
   379  0213                     	;# 
   380  0213                     	;# 
   381  0214                     	;# 
   382  0214                     	;# 
   383  0215                     	;# 
   384  0215                     	;# 
   385  0215                     	;# 
   386  0216                     	;# 
   387  0216                     	;# 
   388  0217                     	;# 
   389  0217                     	;# 
   390  0291                     	;# 
   391  0291                     	;# 
   392  0292                     	;# 
   393  0293                     	;# 
   394  0294                     	;# 
   395  0295                     	;# 
   396  0295                     	;# 
   397  0296                     	;# 
   398  0391                     	;# 
   399  0392                     	;# 
   400  0393                     	;# 
   401  039A                     	;# 
   402  039C                     	;# 
   403  039D                     	;# 
   404  039E                     	;# 
   405  039F                     	;# 
   406  0FE4                     	;# 
   407  0FE5                     	;# 
   408  0FE6                     	;# 
   409  0FE7                     	;# 
   410  0FE8                     	;# 
   411  0FE9                     	;# 
   412  0FEA                     	;# 
   413  0FEB                     	;# 
   414  0FED                     	;# 
   415  0FEE                     	;# 
   416  0FEF                     	;# 
   417  0000                     	;# 
   418  0001                     	;# 
   419  0002                     	;# 
   420  0003                     	;# 
   421  0004                     	;# 
   422  0005                     	;# 
   423  0006                     	;# 
   424  0007                     	;# 
   425  0008                     	;# 
   426  0009                     	;# 
   427  000A                     	;# 
   428  000B                     	;# 
   429  000C                     	;# 
   430  0011                     	;# 
   431  0012                     	;# 
   432  0015                     	;# 
   433  0016                     	;# 
   434  0016                     	;# 
   435  0017                     	;# 
   436  0018                     	;# 
   437  0019                     	;# 
   438  001A                     	;# 
   439  001B                     	;# 
   440  001C                     	;# 
   441  001E                     	;# 
   442  001F                     	;# 
   443  008C                     	;# 
   444  0091                     	;# 
   445  0092                     	;# 
   446  0095                     	;# 
   447  0096                     	;# 
   448  0097                     	;# 
   449  0098                     	;# 
   450  0099                     	;# 
   451  009A                     	;# 
   452  009B                     	;# 
   453  009B                     	;# 
   454  009C                     	;# 
   455  009D                     	;# 
   456  009E                     	;# 
   457  010C                     	;# 
   458  0111                     	;# 
   459  0112                     	;# 
   460  0115                     	;# 
   461  0116                     	;# 
   462  0117                     	;# 
   463  0118                     	;# 
   464  0119                     	;# 
   465  011A                     	;# 
   466  011B                     	;# 
   467  011D                     	;# 
   468  011D                     	;# 
   469  018C                     	;# 
   470  0191                     	;# 
   471  0191                     	;# 
   472  0192                     	;# 
   473  0193                     	;# 
   474  0193                     	;# 
   475  0193                     	;# 
   476  0194                     	;# 
   477  0195                     	;# 
   478  0196                     	;# 
   479  0197                     	;# 
   480  0199                     	;# 
   481  019A                     	;# 
   482  019B                     	;# 
   483  019B                     	;# 
   484  019B                     	;# 
   485  019B                     	;# 
   486  019C                     	;# 
   487  019C                     	;# 
   488  019D                     	;# 
   489  019E                     	;# 
   490  019F                     	;# 
   491  020C                     	;# 
   492  0211                     	;# 
   493  0211                     	;# 
   494  0212                     	;# 
   495  0212                     	;# 
   496  0213                     	;# 
   497  0213                     	;# 
   498  0214                     	;# 
   499  0214                     	;# 
   500  0215                     	;# 
   501  0215                     	;# 
   502  0215                     	;# 
   503  0216                     	;# 
   504  0216                     	;# 
   505  0217                     	;# 
   506  0217                     	;# 
   507  0291                     	;# 
   508  0291                     	;# 
   509  0292                     	;# 
   510  0293                     	;# 
   511  0294                     	;# 
   512  0295                     	;# 
   513  0295                     	;# 
   514  0296                     	;# 
   515  0391                     	;# 
   516  0392                     	;# 
   517  0393                     	;# 
   518  039A                     	;# 
   519  039C                     	;# 
   520  039D                     	;# 
   521  039E                     	;# 
   522  039F                     	;# 
   523  0FE4                     	;# 
   524  0FE5                     	;# 
   525  0FE6                     	;# 
   526  0FE7                     	;# 
   527  0FE8                     	;# 
   528  0FE9                     	;# 
   529  0FEA                     	;# 
   530  0FEB                     	;# 
   531  0FED                     	;# 
   532  0FEE                     	;# 
   533  0FEF                     	;# 
   534  0000                     	;# 
   535  0001                     	;# 
   536  0002                     	;# 
   537  0003                     	;# 
   538  0004                     	;# 
   539  0005                     	;# 
   540  0006                     	;# 
   541  0007                     	;# 
   542  0008                     	;# 
   543  0009                     	;# 
   544  000A                     	;# 
   545  000B                     	;# 
   546  000C                     	;# 
   547  0011                     	;# 
   548  0012                     	;# 
   549  0015                     	;# 
   550  0016                     	;# 
   551  0016                     	;# 
   552  0017                     	;# 
   553  0018                     	;# 
   554  0019                     	;# 
   555  001A                     	;# 
   556  001B                     	;# 
   557  001C                     	;# 
   558  001E                     	;# 
   559  001F                     	;# 
   560  008C                     	;# 
   561  0091                     	;# 
   562  0092                     	;# 
   563  0095                     	;# 
   564  0096                     	;# 
   565  0097                     	;# 
   566  0098                     	;# 
   567  0099                     	;# 
   568  009A                     	;# 
   569  009B                     	;# 
   570  009B                     	;# 
   571  009C                     	;# 
   572  009D                     	;# 
   573  009E                     	;# 
   574  010C                     	;# 
   575  0111                     	;# 
   576  0112                     	;# 
   577  0115                     	;# 
   578  0116                     	;# 
   579  0117                     	;# 
   580  0118                     	;# 
   581  0119                     	;# 
   582  011A                     	;# 
   583  011B                     	;# 
   584  011D                     	;# 
   585  011D                     	;# 
   586  018C                     	;# 
   587  0191                     	;# 
   588  0191                     	;# 
   589  0192                     	;# 
   590  0193                     	;# 
   591  0193                     	;# 
   592  0193                     	;# 
   593  0194                     	;# 
   594  0195                     	;# 
   595  0196                     	;# 
   596  0197                     	;# 
   597  0199                     	;# 
   598  019A                     	;# 
   599  019B                     	;# 
   600  019B                     	;# 
   601  019B                     	;# 
   602  019B                     	;# 
   603  019C                     	;# 
   604  019C                     	;# 
   605  019D                     	;# 
   606  019E                     	;# 
   607  019F                     	;# 
   608  020C                     	;# 
   609  0211                     	;# 
   610  0211                     	;# 
   611  0212                     	;# 
   612  0212                     	;# 
   613  0213                     	;# 
   614  0213                     	;# 
   615  0214                     	;# 
   616  0214                     	;# 
   617  0215                     	;# 
   618  0215                     	;# 
   619  0215                     	;# 
   620  0216                     	;# 
   621  0216                     	;# 
   622  0217                     	;# 
   623  0217                     	;# 
   624  0291                     	;# 
   625  0291                     	;# 
   626  0292                     	;# 
   627  0293                     	;# 
   628  0294                     	;# 
   629  0295                     	;# 
   630  0295                     	;# 
   631  0296                     	;# 
   632  0391                     	;# 
   633  0392                     	;# 
   634  0393                     	;# 
   635  039A                     	;# 
   636  039C                     	;# 
   637  039D                     	;# 
   638  039E                     	;# 
   639  039F                     	;# 
   640  0FE4                     	;# 
   641  0FE5                     	;# 
   642  0FE6                     	;# 
   643  0FE7                     	;# 
   644  0FE8                     	;# 
   645  0FE9                     	;# 
   646  0FEA                     	;# 
   647  0FEB                     	;# 
   648  0FED                     	;# 
   649  0FEE                     	;# 
   650  0FEF                     	;# 
   651  0000                     	;# 
   652  0001                     	;# 
   653  0002                     	;# 
   654  0003                     	;# 
   655  0004                     	;# 
   656  0005                     	;# 
   657  0006                     	;# 
   658  0007                     	;# 
   659  0008                     	;# 
   660  0009                     	;# 
   661  000A                     	;# 
   662  000B                     	;# 
   663  000C                     	;# 
   664  0011                     	;# 
   665  0012                     	;# 
   666  0015                     	;# 
   667  0016                     	;# 
   668  0016                     	;# 
   669  0017                     	;# 
   670  0018                     	;# 
   671  0019                     	;# 
   672  001A                     	;# 
   673  001B                     	;# 
   674  001C                     	;# 
   675  001E                     	;# 
   676  001F                     	;# 
   677  008C                     	;# 
   678  0091                     	;# 
   679  0092                     	;# 
   680  0095                     	;# 
   681  0096                     	;# 
   682  0097                     	;# 
   683  0098                     	;# 
   684  0099                     	;# 
   685  009A                     	;# 
   686  009B                     	;# 
   687  009B                     	;# 
   688  009C                     	;# 
   689  009D                     	;# 
   690  009E                     	;# 
   691  010C                     	;# 
   692  0111                     	;# 
   693  0112                     	;# 
   694  0115                     	;# 
   695  0116                     	;# 
   696  0117                     	;# 
   697  0118                     	;# 
   698  0119                     	;# 
   699  011A                     	;# 
   700  011B                     	;# 
   701  011D                     	;# 
   702  011D                     	;# 
   703  018C                     	;# 
   704  0191                     	;# 
   705  0191                     	;# 
   706  0192                     	;# 
   707  0193                     	;# 
   708  0193                     	;# 
   709  0193                     	;# 
   710  0194                     	;# 
   711  0195                     	;# 
   712  0196                     	;# 
   713  0197                     	;# 
   714  0199                     	;# 
   715  019A                     	;# 
   716  019B                     	;# 
   717  019B                     	;# 
   718  019B                     	;# 
   719  019B                     	;# 
   720  019C                     	;# 
   721  019C                     	;# 
   722  019D                     	;# 
   723  019E                     	;# 
   724  019F                     	;# 
   725  020C                     	;# 
   726  0211                     	;# 
   727  0211                     	;# 
   728  0212                     	;# 
   729  0212                     	;# 
   730  0213                     	;# 
   731  0213                     	;# 
   732  0214                     	;# 
   733  0214                     	;# 
   734  0215                     	;# 
   735  0215                     	;# 
   736  0215                     	;# 
   737  0216                     	;# 
   738  0216                     	;# 
   739  0217                     	;# 
   740  0217                     	;# 
   741  0291                     	;# 
   742  0291                     	;# 
   743  0292                     	;# 
   744  0293                     	;# 
   745  0294                     	;# 
   746  0295                     	;# 
   747  0295                     	;# 
   748  0296                     	;# 
   749  0391                     	;# 
   750  0392                     	;# 
   751  0393                     	;# 
   752  039A                     	;# 
   753  039C                     	;# 
   754  039D                     	;# 
   755  039E                     	;# 
   756  039F                     	;# 
   757  0FE4                     	;# 
   758  0FE5                     	;# 
   759  0FE6                     	;# 
   760  0FE7                     	;# 
   761  0FE8                     	;# 
   762  0FE9                     	;# 
   763  0FEA                     	;# 
   764  0FEB                     	;# 
   765  0FED                     	;# 
   766  0FEE                     	;# 
   767  0FEF                     	;# 
   768  0000                     	;# 
   769  0001                     	;# 
   770  0002                     	;# 
   771  0003                     	;# 
   772  0004                     	;# 
   773  0005                     	;# 
   774  0006                     	;# 
   775  0007                     	;# 
   776  0008                     	;# 
   777  0009                     	;# 
   778  000A                     	;# 
   779  000B                     	;# 
   780  000C                     	;# 
   781  0011                     	;# 
   782  0012                     	;# 
   783  0015                     	;# 
   784  0016                     	;# 
   785  0016                     	;# 
   786  0017                     	;# 
   787  0018                     	;# 
   788  0019                     	;# 
   789  001A                     	;# 
   790  001B                     	;# 
   791  001C                     	;# 
   792  001E                     	;# 
   793  001F                     	;# 
   794  008C                     	;# 
   795  0091                     	;# 
   796  0092                     	;# 
   797  0095                     	;# 
   798  0096                     	;# 
   799  0097                     	;# 
   800  0098                     	;# 
   801  0099                     	;# 
   802  009A                     	;# 
   803  009B                     	;# 
   804  009B                     	;# 
   805  009C                     	;# 
   806  009D                     	;# 
   807  009E                     	;# 
   808  010C                     	;# 
   809  0111                     	;# 
   810  0112                     	;# 
   811  0115                     	;# 
   812  0116                     	;# 
   813  0117                     	;# 
   814  0118                     	;# 
   815  0119                     	;# 
   816  011A                     	;# 
   817  011B                     	;# 
   818  011D                     	;# 
   819  011D                     	;# 
   820  018C                     	;# 
   821  0191                     	;# 
   822  0191                     	;# 
   823  0192                     	;# 
   824  0193                     	;# 
   825  0193                     	;# 
   826  0193                     	;# 
   827  0194                     	;# 
   828  0195                     	;# 
   829  0196                     	;# 
   830  0197                     	;# 
   831  0199                     	;# 
   832  019A                     	;# 
   833  019B                     	;# 
   834  019B                     	;# 
   835  019B                     	;# 
   836  019B                     	;# 
   837  019C                     	;# 
   838  019C                     	;# 
   839  019D                     	;# 
   840  019E                     	;# 
   841  019F                     	;# 
   842  020C                     	;# 
   843  0211                     	;# 
   844  0211                     	;# 
   845  0212                     	;# 
   846  0212                     	;# 
   847  0213                     	;# 
   848  0213                     	;# 
   849  0214                     	;# 
   850  0214                     	;# 
   851  0215                     	;# 
   852  0215                     	;# 
   853  0215                     	;# 
   854  0216                     	;# 
   855  0216                     	;# 
   856  0217                     	;# 
   857  0217                     	;# 
   858  0291                     	;# 
   859  0291                     	;# 
   860  0292                     	;# 
   861  0293                     	;# 
   862  0294                     	;# 
   863  0295                     	;# 
   864  0295                     	;# 
   865  0296                     	;# 
   866  0391                     	;# 
   867  0392                     	;# 
   868  0393                     	;# 
   869  039A                     	;# 
   870  039C                     	;# 
   871  039D                     	;# 
   872  039E                     	;# 
   873  039F                     	;# 
   874  0FE4                     	;# 
   875  0FE5                     	;# 
   876  0FE6                     	;# 
   877  0FE7                     	;# 
   878  0FE8                     	;# 
   879  0FE9                     	;# 
   880  0FEA                     	;# 
   881  0FEB                     	;# 
   882  0FED                     	;# 
   883  0FEE                     	;# 
   884  0FEF                     	;# 
   885  0000                     	;# 
   886  0001                     	;# 
   887  0002                     	;# 
   888  0003                     	;# 
   889  0004                     	;# 
   890  0005                     	;# 
   891  0006                     	;# 
   892  0007                     	;# 
   893  0008                     	;# 
   894  0009                     	;# 
   895  000A                     	;# 
   896  000B                     	;# 
   897  000C                     	;# 
   898  0011                     	;# 
   899  0012                     	;# 
   900  0015                     	;# 
   901  0016                     	;# 
   902  0016                     	;# 
   903  0017                     	;# 
   904  0018                     	;# 
   905  0019                     	;# 
   906  001A                     	;# 
   907  001B                     	;# 
   908  001C                     	;# 
   909  001E                     	;# 
   910  001F                     	;# 
   911  008C                     	;# 
   912  0091                     	;# 
   913  0092                     	;# 
   914  0095                     	;# 
   915  0096                     	;# 
   916  0097                     	;# 
   917  0098                     	;# 
   918  0099                     	;# 
   919  009A                     	;# 
   920  009B                     	;# 
   921  009B                     	;# 
   922  009C                     	;# 
   923  009D                     	;# 
   924  009E                     	;# 
   925  010C                     	;# 
   926  0111                     	;# 
   927  0112                     	;# 
   928  0115                     	;# 
   929  0116                     	;# 
   930  0117                     	;# 
   931  0118                     	;# 
   932  0119                     	;# 
   933  011A                     	;# 
   934  011B                     	;# 
   935  011D                     	;# 
   936  011D                     	;# 
   937  018C                     	;# 
   938  0191                     	;# 
   939  0191                     	;# 
   940  0192                     	;# 
   941  0193                     	;# 
   942  0193                     	;# 
   943  0193                     	;# 
   944  0194                     	;# 
   945  0195                     	;# 
   946  0196                     	;# 
   947  0197                     	;# 
   948  0199                     	;# 
   949  019A                     	;# 
   950  019B                     	;# 
   951  019B                     	;# 
   952  019B                     	;# 
   953  019B                     	;# 
   954  019C                     	;# 
   955  019C                     	;# 
   956  019D                     	;# 
   957  019E                     	;# 
   958  019F                     	;# 
   959  020C                     	;# 
   960  0211                     	;# 
   961  0211                     	;# 
   962  0212                     	;# 
   963  0212                     	;# 
   964  0213                     	;# 
   965  0213                     	;# 
   966  0214                     	;# 
   967  0214                     	;# 
   968  0215                     	;# 
   969  0215                     	;# 
   970  0215                     	;# 
   971  0216                     	;# 
   972  0216                     	;# 
   973  0217                     	;# 
   974  0217                     	;# 
   975  0291                     	;# 
   976  0291                     	;# 
   977  0292                     	;# 
   978  0293                     	;# 
   979  0294                     	;# 
   980  0295                     	;# 
   981  0295                     	;# 
   982  0296                     	;# 
   983  0391                     	;# 
   984  0392                     	;# 
   985  0393                     	;# 
   986  039A                     	;# 
   987  039C                     	;# 
   988  039D                     	;# 
   989  039E                     	;# 
   990  039F                     	;# 
   991  0FE4                     	;# 
   992  0FE5                     	;# 
   993  0FE6                     	;# 
   994  0FE7                     	;# 
   995  0FE8                     	;# 
   996  0FE9                     	;# 
   997  0FEA                     	;# 
   998  0FEB                     	;# 
   999  0FED                     	;# 
  1000  0FEE                     	;# 
  1001  0FEF                     	;# 
  1002                           
  1003                           	psect	idataCOMMON
  1004  01CF                     __pidataCOMMON:	
  1005                           
  1006                           ;initializer for _I2C_slaveWriteData
  1007  01CF  3455               	retlw	85
  1008                           
  1009                           	psect	nvCOMMON
  1010  0078                     __pnvCOMMON:	
  1011  0078                     _dutyValueH:	
  1012  0078                     	ds	1
  1013                           
  1014                           	psect	nvBANK0
  1015  0035                     __pnvBANK0:	
  1016  0035                     _dutyValueL:	
  1017  0035                     	ds	1
  1018  000B                     _INTCONbits	set	11
  1019  001C                     _T2CONbits	set	28
  1020  0011                     _PIR1bits	set	17
  1021  001A                     _TMR2	set	26
  1022  001B                     _PR2	set	27
  1023  001C                     _T2CON	set	28
  1024  0095                     _OPTION_REGbits	set	149
  1025  008C                     _TRISA	set	140
  1026  0097                     _WDTCON	set	151
  1027  0098                     _OSCTUNE	set	152
  1028  0099                     _OSCCON	set	153
  1029  0091                     _PIE1bits	set	145
  1030  010C                     _LATAbits	set	268
  1031  011D                     _APFCON	set	285
  1032  010C                     _LATA	set	268
  1033  0196                     _EECON2	set	406
  1034  0193                     _EEDATL	set	403
  1035  0194                     _EEDATH	set	404
  1036  0195                     _EECON1bits	set	405
  1037  0192                     _EEADRH	set	402
  1038  0191                     _EEADRL	set	401
  1039  018C                     _ANSELA	set	396
  1040  020C                     _WPUA	set	524
  1041  0215                     _SSP1CON1bits	set	533
  1042  0216                     _SSP1CON2bits	set	534
  1043  0214                     _SSP1STATbits	set	532
  1044  0211                     _SSP1BUF	set	529
  1045  0212                     _SSP1ADD	set	530
  1046  0213                     _SSP1MSK	set	531
  1047  0217                     _SSP1CON3	set	535
  1048  0216                     _SSP1CON2	set	534
  1049  0215                     _SSP1CON1	set	533
  1050  0214                     _SSP1STAT	set	532
  1051  0292                     _CCPR1H	set	658
  1052  0291                     _CCPR1L	set	657
  1053  0296                     _PSTR1CON	set	662
  1054  0294                     _PWM1CON	set	660
  1055  0295                     _ECCP1AS	set	661
  1056  0293                     _CCP1CON	set	659
  1057                           
  1058                           ; #config settings
  1059  0000                     
  1060                           	psect	cinit
  1061  001A                     start_initialization:	
  1062  001A                     __initialization:	
  1063                           
  1064                           ; Initialize objects allocated to COMMON
  1065  001A  3181  21CF         	fcall	__pidataCOMMON	;fetch initializer
  1066  001C  00F9               	movwf	__pdataCOMMON& (0+127)
  1067                           
  1068                           ; Clear objects allocated to COMMON
  1069  001D  01F5               	clrf	__pbssCOMMON& (0+127)
  1070  001E  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
  1071  001F  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
  1072                           
  1073                           ; Clear objects allocated to BANK0
  1074  0020  01A0               	clrf	__pbssBANK0& (0+127)
  1075  0021  01A1               	clrf	(__pbssBANK0+1)& (0+127)
  1076  0022  01A2               	clrf	(__pbssBANK0+2)& (0+127)
  1077  0023  01A3               	clrf	(__pbssBANK0+3)& (0+127)
  1078  0024  01A4               	clrf	(__pbssBANK0+4)& (0+127)
  1079  0025  01A5               	clrf	(__pbssBANK0+5)& (0+127)
  1080  0026  01A6               	clrf	(__pbssBANK0+6)& (0+127)
  1081  0027  01A7               	clrf	(__pbssBANK0+7)& (0+127)
  1082  0028  01A8               	clrf	(__pbssBANK0+8)& (0+127)
  1083  0029  01A9               	clrf	(__pbssBANK0+9)& (0+127)
  1084  002A  01AA               	clrf	(__pbssBANK0+10)& (0+127)
  1085  002B  01AB               	clrf	(__pbssBANK0+11)& (0+127)
  1086  002C                     end_of_initialization:	
  1087                           ;End of C runtime variable initialization code
  1088                           
  1089  002C                     __end_of__initialization:	
  1090  002C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1091  002D  0020               	movlb	0
  1092  002E  3180  2830         	ljmp	_main	;jump to C main() function
  1093                           
  1094                           	psect	bssCOMMON
  1095  0075                     __pbssCOMMON:	
  1096  0075                     I2C_StatusCallback@slaveWriteType:	
  1097  0075                     	ds	1
  1098  0076                     I2C_StatusCallback@eepromAddress:	
  1099  0076                     	ds	1
  1100  0077                     _I2C_PWM_VALUE:	
  1101  0077                     	ds	1
  1102                           
  1103                           	psect	dataCOMMON
  1104  0079                     __pdataCOMMON:	
  1105  0079                     _I2C_slaveWriteData:	
  1106  0079                     	ds	1
  1107                           
  1108                           	psect	bssBANK0
  1109  0020                     __pbssBANK0:	
  1110  0020                     _EEPROM_Buffer:	
  1111  0020                     	ds	8
  1112  0028                     _dutyValue:	
  1113  0028                     	ds	2
  1114  002A                     _TMR2_InterruptHandler:	
  1115  002A                     	ds	2
  1116                           
  1117                           	psect	cstackCOMMON
  1118  0070                     __pcstackCOMMON:	
  1119  0070                     ?_TMR2_StartTimer:	
  1120  0070                     ?_I2C_StatusCallback:	
  1121                           ; 1 bytes @ 0x0
  1122                           
  1123  0070                     ??_I2C_StatusCallback:	
  1124                           ; 1 bytes @ 0x0
  1125                           
  1126  0070                     ?_PIN_MANAGER_Initialize:	
  1127                           ; 1 bytes @ 0x0
  1128                           
  1129  0070                     ?_OSCILLATOR_Initialize:	
  1130                           ; 1 bytes @ 0x0
  1131                           
  1132  0070                     ?_WDT_Initialize:	
  1133                           ; 1 bytes @ 0x0
  1134                           
  1135  0070                     ?_EPWM_Initialize:	
  1136                           ; 1 bytes @ 0x0
  1137                           
  1138  0070                     ?_TMR2_Initialize:	
  1139                           ; 1 bytes @ 0x0
  1140                           
  1141  0070                     ?_returnEEPROMvalue:	
  1142                           ; 1 bytes @ 0x0
  1143                           
  1144  0070                     ?_I2C_Initialize:	
  1145                           ; 1 bytes @ 0x0
  1146                           
  1147  0070                     ?_I2C_ISR:	
  1148                           ; 1 bytes @ 0x0
  1149                           
  1150  0070                     ?_INTERRUPT_InterruptManager:	
  1151                           ; 1 bytes @ 0x0
  1152                           
  1153  0070                     ?_SYSTEM_Initialize:	
  1154                           ; 1 bytes @ 0x0
  1155                           
  1156  0070                     ?_DATAEE_ReadByte:	
  1157                           ; 1 bytes @ 0x0
  1158                           
  1159  0070                     ?_main:	
  1160                           ; 1 bytes @ 0x0
  1161                           
  1162                           
  1163                           ; 1 bytes @ 0x0
  1164  0070                     	ds	1
  1165  0071                     I2C_StatusCallback@i2c_bus_state:	
  1166                           
  1167                           ; 1 bytes @ 0x1
  1168  0071                     	ds	1
  1169  0072                     ??_I2C_ISR:	
  1170                           
  1171                           ; 1 bytes @ 0x2
  1172  0072                     	ds	1
  1173  0073                     I2C_ISR@i2c_data:	
  1174                           
  1175                           ; 1 bytes @ 0x3
  1176  0073                     	ds	1
  1177  0074                     ??_INTERRUPT_InterruptManager:	
  1178                           
  1179                           ; 1 bytes @ 0x4
  1180  0074                     	ds	1
  1181                           
  1182                           	psect	cstackBANK0
  1183  002C                     __pcstackBANK0:	
  1184  002C                     ??_TMR2_StartTimer:	
  1185  002C                     ??_PIN_MANAGER_Initialize:	
  1186                           ; 1 bytes @ 0x0
  1187                           
  1188  002C                     ??_OSCILLATOR_Initialize:	
  1189                           ; 1 bytes @ 0x0
  1190                           
  1191  002C                     ??_WDT_Initialize:	
  1192                           ; 1 bytes @ 0x0
  1193                           
  1194  002C                     ??_EPWM_Initialize:	
  1195                           ; 1 bytes @ 0x0
  1196                           
  1197  002C                     ??_TMR2_Initialize:	
  1198                           ; 1 bytes @ 0x0
  1199                           
  1200  002C                     ??_returnEEPROMvalue:	
  1201                           ; 1 bytes @ 0x0
  1202                           
  1203  002C                     ??_I2C_Initialize:	
  1204                           ; 1 bytes @ 0x0
  1205                           
  1206  002C                     ??_SYSTEM_Initialize:	
  1207                           ; 1 bytes @ 0x0
  1208                           
  1209  002C                     ?_EPWM_LoadDutyValue:	
  1210                           ; 1 bytes @ 0x0
  1211                           
  1212  002C                     ?_DATAEE_WriteByte:	
  1213                           ; 1 bytes @ 0x0
  1214                           
  1215  002C                     ??_DATAEE_ReadByte:	
  1216                           ; 1 bytes @ 0x0
  1217                           
  1218  002C                     DATAEE_WriteByte@bData:	
  1219                           ; 1 bytes @ 0x0
  1220                           
  1221  002C                     DATAEE_ReadByte@bAdd:	
  1222                           ; 1 bytes @ 0x0
  1223                           
  1224  002C                     EPWM_LoadDutyValue@dutyValue:	
  1225                           ; 1 bytes @ 0x0
  1226                           
  1227                           
  1228                           ; 2 bytes @ 0x0
  1229  002C                     	ds	1
  1230  002D                     ?_writeEEPROMvalue:	
  1231  002D                     ??_DATAEE_WriteByte:	
  1232                           ; 1 bytes @ 0x1
  1233                           
  1234  002D                     returnEEPROMvalue@adress:	
  1235                           ; 1 bytes @ 0x1
  1236                           
  1237  002D                     writeEEPROMvalue@data:	
  1238                           ; 1 bytes @ 0x1
  1239                           
  1240  002D                     DATAEE_WriteByte@bAdd:	
  1241                           ; 1 bytes @ 0x1
  1242                           
  1243                           
  1244                           ; 1 bytes @ 0x1
  1245  002D                     	ds	1
  1246  002E                     ??_writeEEPROMvalue:	
  1247  002E                     ??_EPWM_LoadDutyValue:	
  1248                           ; 1 bytes @ 0x2
  1249                           
  1250  002E                     returnEEPROMvalue@value:	
  1251                           ; 1 bytes @ 0x2
  1252                           
  1253  002E                     DATAEE_WriteByte@GIEBitValue:	
  1254                           ; 1 bytes @ 0x2
  1255                           
  1256                           
  1257                           ; 1 bytes @ 0x2
  1258  002E                     	ds	1
  1259  002F                     writeEEPROMvalue@adress:	
  1260                           
  1261                           ; 1 bytes @ 0x3
  1262  002F                     	ds	1
  1263  0030                     ??_main:	
  1264                           
  1265                           ; 1 bytes @ 0x4
  1266  0030                     	ds	5
  1267                           
  1268                           	psect	maintext
  1269  0030                     __pmaintext:	
  1270 ;;
  1271 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  1272 ;;
  1273 ;; *************** function _main *****************
  1274 ;; Defined at:
  1275 ;;		line 35 in file "main.c"
  1276 ;; Parameters:    Size  Location     Type
  1277 ;;		None
  1278 ;; Auto vars:     Size  Location     Type
  1279 ;;		None
  1280 ;; Return value:  Size  Location     Type
  1281 ;;                  1    wreg      void 
  1282 ;; Registers used:
  1283 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1284 ;; Tracked objects:
  1285 ;;		On entry : B1F/0
  1286 ;;		On exit  : 0/0
  1287 ;;		Unchanged: 0/0
  1288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1289 ;;      Params:         0       0       0       0
  1290 ;;      Locals:         0       0       0       0
  1291 ;;      Temps:          0       5       0       0
  1292 ;;      Totals:         0       5       0       0
  1293 ;;Total ram usage:        5 bytes
  1294 ;; Hardware stack levels required when called:    6
  1295 ;; This function calls:
  1296 ;;		_DATAEE_ReadByte
  1297 ;;		_DATAEE_WriteByte
  1298 ;;		_EPWM_LoadDutyValue
  1299 ;;		_SYSTEM_Initialize
  1300 ;;		_returnEEPROMvalue
  1301 ;;		_writeEEPROMvalue
  1302 ;; This function is called by:
  1303 ;;		Startup code after reset
  1304 ;; This function uses a non-reentrant model
  1305 ;;
  1306                           
  1307                           
  1308                           ;psect for function _main
  1309  0030                     _main:	
  1310                           
  1311                           ;main.c: 38: SYSTEM_Initialize();
  1312                           
  1313                           ;incstack = 0
  1314                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1315  0030  3181  2156  3180   	fcall	_SYSTEM_Initialize
  1316                           
  1317                           ;main.c: 40: writeEEPROMvalue(0x00, DATAEE_ReadByte(0x00));
  1318  0033  3000               	movlw	0
  1319  0034  3181  2195  3180   	fcall	_DATAEE_ReadByte
  1320  0037  0020               	movlb	0	; select bank0
  1321  0038  00B0               	movwf	??_main
  1322  0039  0830               	movf	??_main,w
  1323  003A  00AD               	movwf	writeEEPROMvalue@data
  1324  003B  3000               	movlw	0
  1325  003C  3181  21AE  3180   	fcall	_writeEEPROMvalue
  1326                           
  1327                           ;main.c: 41: writeEEPROMvalue(0x01, DATAEE_ReadByte(0x01));
  1328  003F  3001               	movlw	1
  1329  0040  3181  2195  3180   	fcall	_DATAEE_ReadByte
  1330  0043  0020               	movlb	0	; select bank0
  1331  0044  00B0               	movwf	??_main
  1332  0045  0830               	movf	??_main,w
  1333  0046  00AD               	movwf	writeEEPROMvalue@data
  1334  0047  3001               	movlw	1
  1335  0048  3181  21AE  3180   	fcall	_writeEEPROMvalue
  1336                           
  1337                           ;main.c: 47: (INTCONbits.GIE = 1);
  1338  004B  178B               	bsf	11,7	;volatile
  1339                           
  1340                           ;main.c: 50: (INTCONbits.PEIE = 1);
  1341  004C  170B               	bsf	11,6	;volatile
  1342  004D                     l1363:	
  1343                           ;main.c: 52: while (1)
  1344                           
  1345                           
  1346                           ;main.c: 53: {
  1347                           ;main.c: 54: dutyValueH = returnEEPROMvalue(0);
  1348  004D  3000               	movlw	0
  1349  004E  3181  2188  3180   	fcall	_returnEEPROMvalue
  1350  0051  0020               	movlb	0	; select bank0
  1351  0052  00B0               	movwf	??_main
  1352  0053  0830               	movf	??_main,w
  1353  0054  00F8               	movwf	_dutyValueH
  1354                           
  1355                           ;main.c: 55: dutyValueL = returnEEPROMvalue(1);
  1356  0055  3001               	movlw	1
  1357  0056  3181  2188  3180   	fcall	_returnEEPROMvalue
  1358  0059  0020               	movlb	0	; select bank0
  1359  005A  00B0               	movwf	??_main
  1360  005B  0830               	movf	??_main,w
  1361  005C  00B5               	movwf	_dutyValueL
  1362                           
  1363                           ;main.c: 57: if(returnEEPROMvalue(2) == 0x01){
  1364  005D  3002               	movlw	2
  1365  005E  3181  2188  3180   	fcall	_returnEEPROMvalue
  1366  0061  3A01               	xorlw	1
  1367  0062  1D03               	skipz
  1368  0063  287C               	goto	l1373
  1369                           
  1370                           ;main.c: 58: DATAEE_WriteByte(0x00, dutyValueH);
  1371  0064  0878               	movf	_dutyValueH,w
  1372  0065  0020               	movlb	0	; select bank0
  1373  0066  00B0               	movwf	??_main
  1374  0067  0830               	movf	??_main,w
  1375  0068  00AC               	movwf	DATAEE_WriteByte@bData
  1376  0069  3000               	movlw	0
  1377  006A  3181  2117  3180   	fcall	_DATAEE_WriteByte
  1378                           
  1379                           ;main.c: 59: DATAEE_WriteByte(0x01, dutyValueL);
  1380  006D  0020               	movlb	0	; select bank0
  1381  006E  0835               	movf	_dutyValueL,w
  1382  006F  00B0               	movwf	??_main
  1383  0070  0830               	movf	??_main,w
  1384  0071  00AC               	movwf	DATAEE_WriteByte@bData
  1385  0072  3001               	movlw	1
  1386  0073  3181  2117  3180   	fcall	_DATAEE_WriteByte
  1387                           
  1388                           ;main.c: 60: writeEEPROMvalue(2, 0x00);
  1389  0076  0020               	movlb	0	; select bank0
  1390  0077  01AD               	clrf	writeEEPROMvalue@data
  1391  0078  3002               	movlw	2
  1392  0079  3181  21AE  3180   	fcall	_writeEEPROMvalue
  1393  007C                     l1373:	
  1394                           
  1395                           ;main.c: 61: }
  1396                           ;main.c: 63: dutyValue = (dutyValueH << 8) | (dutyValueL & 0xff);
  1397  007C  0020               	movlb	0	; select bank0
  1398  007D  0835               	movf	_dutyValueL,w
  1399  007E  00B0               	movwf	??_main
  1400  007F  01B1               	clrf	??_main+1
  1401  0080  0878               	movf	_dutyValueH,w
  1402  0081  00B2               	movwf	??_main+2
  1403  0082  01B3               	clrf	??_main+3
  1404  0083  0832               	movf	??_main+2,w
  1405  0084  00B3               	movwf	??_main+3
  1406  0085  01B2               	clrf	??_main+2
  1407  0086  0830               	movf	??_main,w
  1408  0087  0432               	iorwf	??_main+2,w
  1409  0088  00A8               	movwf	_dutyValue
  1410  0089  0831               	movf	??_main+1,w
  1411  008A  0433               	iorwf	??_main+3,w
  1412  008B  00A9               	movwf	_dutyValue+1
  1413                           
  1414                           ;main.c: 65: if(dutyValue == 0){
  1415  008C  0828               	movf	_dutyValue,w
  1416  008D  0429               	iorwf	_dutyValue+1,w
  1417  008E  1D03               	btfss	3,2
  1418  008F  2897               	goto	l269
  1419                           
  1420                           ;main.c: 66: do { LATAbits.LATA4 = 0; } while(0);
  1421  0090  0022               	movlb	2	; select bank2
  1422  0091  120C               	bcf	12,4	;volatile
  1423                           
  1424                           ;main.c: 67: EPWM_LoadDutyValue(0);
  1425  0092  3000               	movlw	0
  1426  0093  0020               	movlb	0	; select bank0
  1427  0094  00AC               	movwf	EPWM_LoadDutyValue@dutyValue
  1428  0095  00AD               	movwf	EPWM_LoadDutyValue@dutyValue+1
  1429  0096  289E               	goto	L1
  1430  0097                     l269:	
  1431                           ;main.c: 69: else{
  1432                           ;main.c: 70: do { LATAbits.LATA4 = 1; } while(0);
  1433                           
  1434                           ;main.c: 68: }
  1435                           
  1436  0097  0022               	movlb	2	; select bank2
  1437  0098  160C               	bsf	12,4	;volatile
  1438                           
  1439                           ;main.c: 71: EPWM_LoadDutyValue(dutyValue);
  1440  0099  0020               	movlb	0	; select bank0
  1441  009A  0829               	movf	_dutyValue+1,w
  1442  009B  00AD               	movwf	EPWM_LoadDutyValue@dutyValue+1
  1443  009C  0828               	movf	_dutyValue,w
  1444  009D  00AC               	movwf	EPWM_LoadDutyValue@dutyValue
  1445  009E                     L1:	
  1446  009E  3181  213A  3180   	fcall	_EPWM_LoadDutyValue
  1447                           
  1448                           ;main.c: 72: }
  1449                           ;main.c: 74: _delay((unsigned long)((10)*(8000000/4000.0)));
  1450  00A1  301A               	movlw	26
  1451  00A2  0020               	movlb	0	; select bank0
  1452  00A3  00B0               	movwf	??_main
  1453  00A4  30F8               	movlw	248
  1454  00A5                     u387:	
  1455  00A5  0B89               	decfsz	9,f
  1456  00A6  28A5               	goto	u387
  1457  00A7  0BB0               	decfsz	??_main,f
  1458  00A8  28A5               	goto	u387
  1459  00A9  0000               	nop
  1460  00AA  284D               	goto	l1363
  1461  00AB                     __end_of_main:	
  1462                           
  1463                           	psect	text1
  1464  01AE                     __ptext1:	
  1465 ;; *************** function _writeEEPROMvalue *****************
  1466 ;; Defined at:
  1467 ;;		line 75 in file "mcc_generated_files/i2c.c"
  1468 ;; Parameters:    Size  Location     Type
  1469 ;;  adress          1    wreg     unsigned char 
  1470 ;;  data            1    1[BANK0 ] unsigned char 
  1471 ;; Auto vars:     Size  Location     Type
  1472 ;;  adress          1    3[BANK0 ] unsigned char 
  1473 ;; Return value:  Size  Location     Type
  1474 ;;                  1    wreg      void 
  1475 ;; Registers used:
  1476 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1477 ;; Tracked objects:
  1478 ;;		On entry : 0/0
  1479 ;;		On exit  : 0/0
  1480 ;;		Unchanged: 0/0
  1481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1482 ;;      Params:         0       1       0       0
  1483 ;;      Locals:         0       1       0       0
  1484 ;;      Temps:          0       1       0       0
  1485 ;;      Totals:         0       3       0       0
  1486 ;;Total ram usage:        3 bytes
  1487 ;; Hardware stack levels used:    1
  1488 ;; Hardware stack levels required when called:    3
  1489 ;; This function calls:
  1490 ;;		Nothing
  1491 ;; This function is called by:
  1492 ;;		_main
  1493 ;; This function uses a non-reentrant model
  1494 ;;
  1495                           
  1496                           
  1497                           ;psect for function _writeEEPROMvalue
  1498  01AE                     _writeEEPROMvalue:	
  1499                           
  1500                           ;incstack = 0
  1501                           ; Regs used in _writeEEPROMvalue: [wreg+fsr1l+fsr1h+status,2+status,0]
  1502                           ;writeEEPROMvalue@adress stored from wreg
  1503  01AE  0020               	movlb	0	; select bank0
  1504  01AF  00AF               	movwf	writeEEPROMvalue@adress
  1505                           
  1506                           ;i2c.c: 76: EEPROM_Buffer[adress] = data;
  1507  01B0  082D               	movf	writeEEPROMvalue@data,w
  1508  01B1  00AE               	movwf	??_writeEEPROMvalue
  1509  01B2  082F               	movf	writeEEPROMvalue@adress,w
  1510  01B3  3E20               	addlw	(low (_EEPROM_Buffer| 0))& (0+255)
  1511  01B4  0086               	movwf	6
  1512  01B5  0187               	clrf	7
  1513  01B6  082E               	movf	??_writeEEPROMvalue,w
  1514  01B7  0081               	movwf	1
  1515  01B8  0008               	return
  1516  01B9                     __end_of_writeEEPROMvalue:	
  1517                           
  1518                           	psect	text2
  1519  0188                     __ptext2:	
  1520 ;; *************** function _returnEEPROMvalue *****************
  1521 ;; Defined at:
  1522 ;;		line 69 in file "mcc_generated_files/i2c.c"
  1523 ;; Parameters:    Size  Location     Type
  1524 ;;  adress          1    wreg     unsigned char 
  1525 ;; Auto vars:     Size  Location     Type
  1526 ;;  adress          1    1[BANK0 ] unsigned char 
  1527 ;;  value           1    2[BANK0 ] unsigned char 
  1528 ;; Return value:  Size  Location     Type
  1529 ;;                  1    wreg      unsigned char 
  1530 ;; Registers used:
  1531 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1532 ;; Tracked objects:
  1533 ;;		On entry : 0/0
  1534 ;;		On exit  : 0/0
  1535 ;;		Unchanged: 0/0
  1536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1537 ;;      Params:         0       0       0       0
  1538 ;;      Locals:         0       2       0       0
  1539 ;;      Temps:          0       1       0       0
  1540 ;;      Totals:         0       3       0       0
  1541 ;;Total ram usage:        3 bytes
  1542 ;; Hardware stack levels used:    1
  1543 ;; Hardware stack levels required when called:    3
  1544 ;; This function calls:
  1545 ;;		Nothing
  1546 ;; This function is called by:
  1547 ;;		_main
  1548 ;; This function uses a non-reentrant model
  1549 ;;
  1550                           
  1551                           
  1552                           ;psect for function _returnEEPROMvalue
  1553  0188                     _returnEEPROMvalue:	
  1554                           
  1555                           ;incstack = 0
  1556                           ; Regs used in _returnEEPROMvalue: [wreg+fsr1l+fsr1h+status,2+status,0]
  1557                           ;returnEEPROMvalue@adress stored from wreg
  1558  0188  0020               	movlb	0	; select bank0
  1559  0189  00AD               	movwf	returnEEPROMvalue@adress
  1560                           
  1561                           ;i2c.c: 70: char value = 0;
  1562  018A  01AE               	clrf	returnEEPROMvalue@value
  1563                           
  1564                           ;i2c.c: 71: value = EEPROM_Buffer[adress];
  1565  018B  082D               	movf	returnEEPROMvalue@adress,w
  1566  018C  3E20               	addlw	(low (_EEPROM_Buffer| 0))& (0+255)
  1567  018D  0086               	movwf	6
  1568  018E  0187               	clrf	7
  1569  018F  0801               	movf	1,w
  1570  0190  00AC               	movwf	??_returnEEPROMvalue
  1571  0191  082C               	movf	??_returnEEPROMvalue,w
  1572  0192  00AE               	movwf	returnEEPROMvalue@value
  1573                           
  1574                           ;i2c.c: 72: return value;
  1575  0193  082E               	movf	returnEEPROMvalue@value,w
  1576  0194  0008               	return
  1577  0195                     __end_of_returnEEPROMvalue:	
  1578                           
  1579                           	psect	text3
  1580  0156                     __ptext3:	
  1581 ;; *************** function _SYSTEM_Initialize *****************
  1582 ;; Defined at:
  1583 ;;		line 69 in file "mcc_generated_files/mcc.c"
  1584 ;; Parameters:    Size  Location     Type
  1585 ;;		None
  1586 ;; Auto vars:     Size  Location     Type
  1587 ;;		None
  1588 ;; Return value:  Size  Location     Type
  1589 ;;                  1    wreg      void 
  1590 ;; Registers used:
  1591 ;;		wreg, status,2, status,0, pclath, cstack
  1592 ;; Tracked objects:
  1593 ;;		On entry : 0/0
  1594 ;;		On exit  : 0/0
  1595 ;;		Unchanged: 0/0
  1596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1597 ;;      Params:         0       0       0       0
  1598 ;;      Locals:         0       0       0       0
  1599 ;;      Temps:          0       0       0       0
  1600 ;;      Totals:         0       0       0       0
  1601 ;;Total ram usage:        0 bytes
  1602 ;; Hardware stack levels used:    1
  1603 ;; Hardware stack levels required when called:    5
  1604 ;; This function calls:
  1605 ;;		_EPWM_Initialize
  1606 ;;		_I2C_Initialize
  1607 ;;		_OSCILLATOR_Initialize
  1608 ;;		_PIN_MANAGER_Initialize
  1609 ;;		_TMR2_Initialize
  1610 ;;		_WDT_Initialize
  1611 ;; This function is called by:
  1612 ;;		_main
  1613 ;; This function uses a non-reentrant model
  1614 ;;
  1615                           
  1616                           
  1617                           ;psect for function _SYSTEM_Initialize
  1618  0156                     _SYSTEM_Initialize:	
  1619                           
  1620                           ;mcc.c: 72: PIN_MANAGER_Initialize();
  1621                           
  1622                           ;incstack = 0
  1623                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1624  0156  3181  2168  3181   	fcall	_PIN_MANAGER_Initialize
  1625                           
  1626                           ;mcc.c: 73: OSCILLATOR_Initialize();
  1627  0159  3181  21C3  3181   	fcall	_OSCILLATOR_Initialize
  1628                           
  1629                           ;mcc.c: 74: WDT_Initialize();
  1630  015C  3181  21C8  3181   	fcall	_WDT_Initialize
  1631                           
  1632                           ;mcc.c: 75: I2C_Initialize();
  1633  015F  3181  2179  3181   	fcall	_I2C_Initialize
  1634                           
  1635                           ;mcc.c: 76: EPWM_Initialize();
  1636  0162  3181  21A2  3181   	fcall	_EPWM_Initialize
  1637                           
  1638                           ;mcc.c: 77: TMR2_Initialize();
  1639  0165  3181  21B9         	fcall	_TMR2_Initialize
  1640  0167  0008               	return
  1641  0168                     __end_of_SYSTEM_Initialize:	
  1642                           
  1643                           	psect	text4
  1644  01C8                     __ptext4:	
  1645 ;; *************** function _WDT_Initialize *****************
  1646 ;; Defined at:
  1647 ;;		line 88 in file "mcc_generated_files/mcc.c"
  1648 ;; Parameters:    Size  Location     Type
  1649 ;;		None
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;		None
  1652 ;; Return value:  Size  Location     Type
  1653 ;;                  1    wreg      void 
  1654 ;; Registers used:
  1655 ;;		wreg
  1656 ;; Tracked objects:
  1657 ;;		On entry : 0/0
  1658 ;;		On exit  : 0/0
  1659 ;;		Unchanged: 0/0
  1660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1661 ;;      Params:         0       0       0       0
  1662 ;;      Locals:         0       0       0       0
  1663 ;;      Temps:          0       0       0       0
  1664 ;;      Totals:         0       0       0       0
  1665 ;;Total ram usage:        0 bytes
  1666 ;; Hardware stack levels used:    1
  1667 ;; Hardware stack levels required when called:    3
  1668 ;; This function calls:
  1669 ;;		Nothing
  1670 ;; This function is called by:
  1671 ;;		_SYSTEM_Initialize
  1672 ;; This function uses a non-reentrant model
  1673 ;;
  1674                           
  1675                           
  1676                           ;psect for function _WDT_Initialize
  1677  01C8                     _WDT_Initialize:	
  1678                           
  1679                           ;mcc.c: 91: WDTCON = 0x16;
  1680                           
  1681                           ;incstack = 0
  1682                           ; Regs used in _WDT_Initialize: [wreg]
  1683  01C8  3016               	movlw	22
  1684  01C9  0021               	movlb	1	; select bank1
  1685  01CA  0097               	movwf	23	;volatile
  1686  01CB  0008               	return
  1687  01CC                     __end_of_WDT_Initialize:	
  1688                           
  1689                           	psect	text5
  1690  01B9                     __ptext5:	
  1691 ;; *************** function _TMR2_Initialize *****************
  1692 ;; Defined at:
  1693 ;;		line 63 in file "mcc_generated_files/tmr2.c"
  1694 ;; Parameters:    Size  Location     Type
  1695 ;;		None
  1696 ;; Auto vars:     Size  Location     Type
  1697 ;;		None
  1698 ;; Return value:  Size  Location     Type
  1699 ;;                  1    wreg      void 
  1700 ;; Registers used:
  1701 ;;		wreg, status,2, status,0, pclath, cstack
  1702 ;; Tracked objects:
  1703 ;;		On entry : 0/0
  1704 ;;		On exit  : 0/0
  1705 ;;		Unchanged: 0/0
  1706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1707 ;;      Params:         0       0       0       0
  1708 ;;      Locals:         0       0       0       0
  1709 ;;      Temps:          0       0       0       0
  1710 ;;      Totals:         0       0       0       0
  1711 ;;Total ram usage:        0 bytes
  1712 ;; Hardware stack levels used:    1
  1713 ;; Hardware stack levels required when called:    4
  1714 ;; This function calls:
  1715 ;;		_TMR2_StartTimer
  1716 ;; This function is called by:
  1717 ;;		_SYSTEM_Initialize
  1718 ;; This function uses a non-reentrant model
  1719 ;;
  1720                           
  1721                           
  1722                           ;psect for function _TMR2_Initialize
  1723  01B9                     _TMR2_Initialize:	
  1724                           
  1725                           ;tmr2.c: 68: T2CON = 0x03;
  1726                           
  1727                           ;incstack = 0
  1728                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1729  01B9  3003               	movlw	3
  1730  01BA  0020               	movlb	0	; select bank0
  1731  01BB  009C               	movwf	28	;volatile
  1732                           
  1733                           ;tmr2.c: 71: PR2 = 0x7C;
  1734  01BC  307C               	movlw	124
  1735  01BD  009B               	movwf	27	;volatile
  1736                           
  1737                           ;tmr2.c: 74: TMR2 = 0x00;
  1738  01BE  019A               	clrf	26	;volatile
  1739                           
  1740                           ;tmr2.c: 77: PIR1bits.TMR2IF = 0;
  1741  01BF  1091               	bcf	17,1	;volatile
  1742                           
  1743                           ;tmr2.c: 80: TMR2_StartTimer();
  1744  01C0  3181  21CC         	fcall	_TMR2_StartTimer
  1745  01C2  0008               	return
  1746  01C3                     __end_of_TMR2_Initialize:	
  1747                           
  1748                           	psect	text6
  1749  01CC                     __ptext6:	
  1750 ;; *************** function _TMR2_StartTimer *****************
  1751 ;; Defined at:
  1752 ;;		line 83 in file "mcc_generated_files/tmr2.c"
  1753 ;; Parameters:    Size  Location     Type
  1754 ;;		None
  1755 ;; Auto vars:     Size  Location     Type
  1756 ;;		None
  1757 ;; Return value:  Size  Location     Type
  1758 ;;                  1    wreg      void 
  1759 ;; Registers used:
  1760 ;;		None
  1761 ;; Tracked objects:
  1762 ;;		On entry : 0/0
  1763 ;;		On exit  : 0/0
  1764 ;;		Unchanged: 0/0
  1765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1766 ;;      Params:         0       0       0       0
  1767 ;;      Locals:         0       0       0       0
  1768 ;;      Temps:          0       0       0       0
  1769 ;;      Totals:         0       0       0       0
  1770 ;;Total ram usage:        0 bytes
  1771 ;; Hardware stack levels used:    1
  1772 ;; Hardware stack levels required when called:    3
  1773 ;; This function calls:
  1774 ;;		Nothing
  1775 ;; This function is called by:
  1776 ;;		_TMR2_Initialize
  1777 ;; This function uses a non-reentrant model
  1778 ;;
  1779                           
  1780                           
  1781                           ;psect for function _TMR2_StartTimer
  1782  01CC                     _TMR2_StartTimer:	
  1783                           
  1784                           ;tmr2.c: 86: T2CONbits.TMR2ON = 1;
  1785                           
  1786                           ;incstack = 0
  1787                           ; Regs used in _TMR2_StartTimer: []
  1788  01CC  0020               	movlb	0	; select bank0
  1789  01CD  151C               	bsf	28,2	;volatile
  1790  01CE  0008               	return
  1791  01CF                     __end_of_TMR2_StartTimer:	
  1792                           
  1793                           	psect	text7
  1794  0168                     __ptext7:	
  1795 ;; *************** function _PIN_MANAGER_Initialize *****************
  1796 ;; Defined at:
  1797 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;		None
  1800 ;; Auto vars:     Size  Location     Type
  1801 ;;		None
  1802 ;; Return value:  Size  Location     Type
  1803 ;;                  1    wreg      void 
  1804 ;; Registers used:
  1805 ;;		wreg, status,2
  1806 ;; Tracked objects:
  1807 ;;		On entry : 0/0
  1808 ;;		On exit  : 0/0
  1809 ;;		Unchanged: 0/0
  1810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1811 ;;      Params:         0       0       0       0
  1812 ;;      Locals:         0       0       0       0
  1813 ;;      Temps:          0       0       0       0
  1814 ;;      Totals:         0       0       0       0
  1815 ;;Total ram usage:        0 bytes
  1816 ;; Hardware stack levels used:    1
  1817 ;; Hardware stack levels required when called:    3
  1818 ;; This function calls:
  1819 ;;		Nothing
  1820 ;; This function is called by:
  1821 ;;		_SYSTEM_Initialize
  1822 ;; This function uses a non-reentrant model
  1823 ;;
  1824                           
  1825                           
  1826                           ;psect for function _PIN_MANAGER_Initialize
  1827  0168                     _PIN_MANAGER_Initialize:	
  1828                           
  1829                           ;pin_manager.c: 56: LATA = 0x00;
  1830                           
  1831                           ;incstack = 0
  1832                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1833  0168  0022               	movlb	2	; select bank2
  1834  0169  018C               	clrf	12	;volatile
  1835                           
  1836                           ;pin_manager.c: 61: TRISA = 0x0F;
  1837  016A  300F               	movlw	15
  1838  016B  0021               	movlb	1	; select bank1
  1839  016C  008C               	movwf	12	;volatile
  1840                           
  1841                           ;pin_manager.c: 66: ANSELA = 0x11;
  1842  016D  3011               	movlw	17
  1843  016E  0023               	movlb	3	; select bank3
  1844  016F  008C               	movwf	12	;volatile
  1845                           
  1846                           ;pin_manager.c: 71: WPUA = 0x3F;
  1847  0170  303F               	movlw	63
  1848  0171  0024               	movlb	4	; select bank4
  1849  0172  008C               	movwf	12	;volatile
  1850                           
  1851                           ;pin_manager.c: 72: OPTION_REGbits.nWPUEN = 0;
  1852  0173  0021               	movlb	1	; select bank1
  1853  0174  1395               	bcf	21,7	;volatile
  1854                           
  1855                           ;pin_manager.c: 78: APFCON = 0x01;
  1856  0175  3001               	movlw	1
  1857  0176  0022               	movlb	2	; select bank2
  1858  0177  009D               	movwf	29	;volatile
  1859  0178  0008               	return
  1860  0179                     __end_of_PIN_MANAGER_Initialize:	
  1861                           
  1862                           	psect	text8
  1863  01C3                     __ptext8:	
  1864 ;; *************** function _OSCILLATOR_Initialize *****************
  1865 ;; Defined at:
  1866 ;;		line 80 in file "mcc_generated_files/mcc.c"
  1867 ;; Parameters:    Size  Location     Type
  1868 ;;		None
  1869 ;; Auto vars:     Size  Location     Type
  1870 ;;		None
  1871 ;; Return value:  Size  Location     Type
  1872 ;;                  1    wreg      void 
  1873 ;; Registers used:
  1874 ;;		wreg, status,2
  1875 ;; Tracked objects:
  1876 ;;		On entry : 0/0
  1877 ;;		On exit  : 0/0
  1878 ;;		Unchanged: 0/0
  1879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1880 ;;      Params:         0       0       0       0
  1881 ;;      Locals:         0       0       0       0
  1882 ;;      Temps:          0       0       0       0
  1883 ;;      Totals:         0       0       0       0
  1884 ;;Total ram usage:        0 bytes
  1885 ;; Hardware stack levels used:    1
  1886 ;; Hardware stack levels required when called:    3
  1887 ;; This function calls:
  1888 ;;		Nothing
  1889 ;; This function is called by:
  1890 ;;		_SYSTEM_Initialize
  1891 ;; This function uses a non-reentrant model
  1892 ;;
  1893                           
  1894                           
  1895                           ;psect for function _OSCILLATOR_Initialize
  1896  01C3                     _OSCILLATOR_Initialize:	
  1897                           
  1898                           ;mcc.c: 83: OSCCON = 0x72;
  1899                           
  1900                           ;incstack = 0
  1901                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  1902  01C3  3072               	movlw	114
  1903  01C4  0021               	movlb	1	; select bank1
  1904  01C5  0099               	movwf	25	;volatile
  1905                           
  1906                           ;mcc.c: 85: OSCTUNE = 0x00;
  1907  01C6  0198               	clrf	24	;volatile
  1908  01C7  0008               	return
  1909  01C8                     __end_of_OSCILLATOR_Initialize:	
  1910                           
  1911                           	psect	text9
  1912  0179                     __ptext9:	
  1913 ;; *************** function _I2C_Initialize *****************
  1914 ;; Defined at:
  1915 ;;		line 97 in file "mcc_generated_files/i2c.c"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;		None
  1918 ;; Auto vars:     Size  Location     Type
  1919 ;;		None
  1920 ;; Return value:  Size  Location     Type
  1921 ;;                  1    wreg      void 
  1922 ;; Registers used:
  1923 ;;		wreg, status,2
  1924 ;; Tracked objects:
  1925 ;;		On entry : 0/0
  1926 ;;		On exit  : 0/0
  1927 ;;		Unchanged: 0/0
  1928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1929 ;;      Params:         0       0       0       0
  1930 ;;      Locals:         0       0       0       0
  1931 ;;      Temps:          0       0       0       0
  1932 ;;      Totals:         0       0       0       0
  1933 ;;Total ram usage:        0 bytes
  1934 ;; Hardware stack levels used:    1
  1935 ;; Hardware stack levels required when called:    3
  1936 ;; This function calls:
  1937 ;;		Nothing
  1938 ;; This function is called by:
  1939 ;;		_SYSTEM_Initialize
  1940 ;; This function uses a non-reentrant model
  1941 ;;
  1942                           
  1943                           
  1944                           ;psect for function _I2C_Initialize
  1945  0179                     _I2C_Initialize:	
  1946                           
  1947                           ;i2c.c: 101: SSP1STAT = 0x00;
  1948                           
  1949                           ;incstack = 0
  1950                           ; Regs used in _I2C_Initialize: [wreg+status,2]
  1951  0179  0024               	movlb	4	; select bank4
  1952  017A  0194               	clrf	20	;volatile
  1953                           
  1954                           ;i2c.c: 103: SSP1CON1 = 0x26;
  1955  017B  3026               	movlw	38
  1956  017C  0095               	movwf	21	;volatile
  1957                           
  1958                           ;i2c.c: 105: SSP1CON2 = 0x00;
  1959  017D  0196               	clrf	22	;volatile
  1960                           
  1961                           ;i2c.c: 107: SSP1CON3 = 0x00;
  1962  017E  0197               	clrf	23	;volatile
  1963                           
  1964                           ;i2c.c: 109: SSP1MSK = (0x33 << 1);
  1965  017F  3066               	movlw	102
  1966  0180  0093               	movwf	19	;volatile
  1967                           
  1968                           ;i2c.c: 111: SSP1ADD = (0x22 << 1);
  1969  0181  3044               	movlw	68
  1970  0182  0092               	movwf	18	;volatile
  1971                           
  1972                           ;i2c.c: 114: PIR1bits.SSP1IF = 0;
  1973  0183  0020               	movlb	0	; select bank0
  1974  0184  1191               	bcf	17,3	;volatile
  1975                           
  1976                           ;i2c.c: 116: PIE1bits.SSP1IE = 1;
  1977  0185  0021               	movlb	1	; select bank1
  1978  0186  1591               	bsf	17,3	;volatile
  1979  0187  0008               	return
  1980  0188                     __end_of_I2C_Initialize:	
  1981                           
  1982                           	psect	text10
  1983  01A2                     __ptext10:	
  1984 ;; *************** function _EPWM_Initialize *****************
  1985 ;; Defined at:
  1986 ;;		line 63 in file "mcc_generated_files/epwm.c"
  1987 ;; Parameters:    Size  Location     Type
  1988 ;;		None
  1989 ;; Auto vars:     Size  Location     Type
  1990 ;;		None
  1991 ;; Return value:  Size  Location     Type
  1992 ;;                  1    wreg      void 
  1993 ;; Registers used:
  1994 ;;		wreg, status,2
  1995 ;; Tracked objects:
  1996 ;;		On entry : 0/0
  1997 ;;		On exit  : 0/0
  1998 ;;		Unchanged: 0/0
  1999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2000 ;;      Params:         0       0       0       0
  2001 ;;      Locals:         0       0       0       0
  2002 ;;      Temps:          0       0       0       0
  2003 ;;      Totals:         0       0       0       0
  2004 ;;Total ram usage:        0 bytes
  2005 ;; Hardware stack levels used:    1
  2006 ;; Hardware stack levels required when called:    3
  2007 ;; This function calls:
  2008 ;;		Nothing
  2009 ;; This function is called by:
  2010 ;;		_SYSTEM_Initialize
  2011 ;; This function uses a non-reentrant model
  2012 ;;
  2013                           
  2014                           
  2015                           ;psect for function _EPWM_Initialize
  2016  01A2                     _EPWM_Initialize:	
  2017                           
  2018                           ;epwm.c: 68: CCP1CON = 0x1D;
  2019                           
  2020                           ;incstack = 0
  2021                           ; Regs used in _EPWM_Initialize: [wreg+status,2]
  2022  01A2  301D               	movlw	29
  2023  01A3  0025               	movlb	5	; select bank5
  2024  01A4  0093               	movwf	19	;volatile
  2025                           
  2026                           ;epwm.c: 71: ECCP1AS = 0x00;
  2027  01A5  0195               	clrf	21	;volatile
  2028                           
  2029                           ;epwm.c: 74: PWM1CON = 0x80;
  2030  01A6  3080               	movlw	128
  2031  01A7  0094               	movwf	20	;volatile
  2032                           
  2033                           ;epwm.c: 77: PSTR1CON = 0x01;
  2034  01A8  3001               	movlw	1
  2035  01A9  0096               	movwf	22	;volatile
  2036                           
  2037                           ;epwm.c: 80: CCPR1L = 0x3E;
  2038  01AA  303E               	movlw	62
  2039  01AB  0091               	movwf	17	;volatile
  2040                           
  2041                           ;epwm.c: 83: CCPR1H = 0x00;
  2042  01AC  0192               	clrf	18	;volatile
  2043  01AD  0008               	return
  2044  01AE                     __end_of_EPWM_Initialize:	
  2045                           
  2046                           	psect	text11
  2047  013A                     __ptext11:	
  2048 ;; *************** function _EPWM_LoadDutyValue *****************
  2049 ;; Defined at:
  2050 ;;		line 87 in file "mcc_generated_files/epwm.c"
  2051 ;; Parameters:    Size  Location     Type
  2052 ;;  dutyValue       2    0[BANK0 ] unsigned int 
  2053 ;; Auto vars:     Size  Location     Type
  2054 ;;		None
  2055 ;; Return value:  Size  Location     Type
  2056 ;;                  1    wreg      void 
  2057 ;; Registers used:
  2058 ;;		wreg, status,2, status,0
  2059 ;; Tracked objects:
  2060 ;;		On entry : 0/0
  2061 ;;		On exit  : 0/0
  2062 ;;		Unchanged: 0/0
  2063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2064 ;;      Params:         0       2       0       0
  2065 ;;      Locals:         0       0       0       0
  2066 ;;      Temps:          0       2       0       0
  2067 ;;      Totals:         0       4       0       0
  2068 ;;Total ram usage:        4 bytes
  2069 ;; Hardware stack levels used:    1
  2070 ;; Hardware stack levels required when called:    3
  2071 ;; This function calls:
  2072 ;;		Nothing
  2073 ;; This function is called by:
  2074 ;;		_main
  2075 ;; This function uses a non-reentrant model
  2076 ;;
  2077                           
  2078                           
  2079                           ;psect for function _EPWM_LoadDutyValue
  2080  013A                     _EPWM_LoadDutyValue:	
  2081                           
  2082                           ;epwm.c: 90: CCPR1L = ((dutyValue & 0x03FC)>>2);
  2083                           
  2084                           ;incstack = 0
  2085                           ; Regs used in _EPWM_LoadDutyValue: [wreg+status,2+status,0]
  2086  013A  0020               	movlb	0	; select bank0
  2087  013B  082D               	movf	EPWM_LoadDutyValue@dutyValue+1,w
  2088  013C  00AF               	movwf	??_EPWM_LoadDutyValue+1
  2089  013D  082C               	movf	EPWM_LoadDutyValue@dutyValue,w
  2090  013E  00AE               	movwf	??_EPWM_LoadDutyValue
  2091  013F  36AF               	lsrf	??_EPWM_LoadDutyValue+1,f
  2092  0140  0CAE               	rrf	??_EPWM_LoadDutyValue,f
  2093  0141  36AF               	lsrf	??_EPWM_LoadDutyValue+1,f
  2094  0142  0CAE               	rrf	??_EPWM_LoadDutyValue,f
  2095  0143  082E               	movf	??_EPWM_LoadDutyValue,w
  2096  0144  0025               	movlb	5	; select bank5
  2097  0145  0091               	movwf	17	;volatile
  2098                           
  2099                           ;epwm.c: 93: CCP1CON = (CCP1CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  2100  0146  0020               	movlb	0	; select bank0
  2101  0147  082C               	movf	EPWM_LoadDutyValue@dutyValue,w
  2102  0148  3903               	andlw	3
  2103  0149  00AE               	movwf	??_EPWM_LoadDutyValue
  2104  014A  3004               	movlw	4
  2105  014B                     u345:	
  2106  014B  35AE               	lslf	??_EPWM_LoadDutyValue,f
  2107  014C  0B89               	decfsz	9,f
  2108  014D  294B               	goto	u345
  2109  014E  0025               	movlb	5	; select bank5
  2110  014F  0813               	movf	19,w	;volatile
  2111  0150  39CF               	andlw	207
  2112  0151  0020               	movlb	0	; select bank0
  2113  0152  042E               	iorwf	??_EPWM_LoadDutyValue,w
  2114  0153  0025               	movlb	5	; select bank5
  2115  0154  0093               	movwf	19	;volatile
  2116  0155  0008               	return
  2117  0156                     __end_of_EPWM_LoadDutyValue:	
  2118                           
  2119                           	psect	text12
  2120  0117                     __ptext12:	
  2121 ;; *************** function _DATAEE_WriteByte *****************
  2122 ;; Defined at:
  2123 ;;		line 180 in file "mcc_generated_files/memory.c"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;  bAdd            1    wreg     unsigned char 
  2126 ;;  bData           1    0[BANK0 ] unsigned char 
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;  bAdd            1    1[BANK0 ] unsigned char 
  2129 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
  2130 ;; Return value:  Size  Location     Type
  2131 ;;                  1    wreg      void 
  2132 ;; Registers used:
  2133 ;;		wreg, status,2, status,0
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2139 ;;      Params:         0       1       0       0
  2140 ;;      Locals:         0       2       0       0
  2141 ;;      Temps:          0       0       0       0
  2142 ;;      Totals:         0       3       0       0
  2143 ;;Total ram usage:        3 bytes
  2144 ;; Hardware stack levels used:    1
  2145 ;; Hardware stack levels required when called:    3
  2146 ;; This function calls:
  2147 ;;		Nothing
  2148 ;; This function is called by:
  2149 ;;		_main
  2150 ;; This function uses a non-reentrant model
  2151 ;;
  2152                           
  2153                           
  2154                           ;psect for function _DATAEE_WriteByte
  2155  0117                     _DATAEE_WriteByte:	
  2156                           
  2157                           ;incstack = 0
  2158                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
  2159                           ;DATAEE_WriteByte@bAdd stored from wreg
  2160  0117  0020               	movlb	0	; select bank0
  2161  0118  00AD               	movwf	DATAEE_WriteByte@bAdd
  2162                           
  2163                           ;memory.c: 182: uint8_t GIEBitValue = 0;
  2164  0119  01AE               	clrf	DATAEE_WriteByte@GIEBitValue
  2165                           
  2166                           ;memory.c: 184: EEADRL = (bAdd & 0x0ff);
  2167  011A  082D               	movf	DATAEE_WriteByte@bAdd,w
  2168  011B  0023               	movlb	3	; select bank3
  2169  011C  0091               	movwf	17	;volatile
  2170                           
  2171                           ;memory.c: 185: EEDATL = bData;
  2172  011D  0020               	movlb	0	; select bank0
  2173  011E  082C               	movf	DATAEE_WriteByte@bData,w
  2174  011F  0023               	movlb	3	; select bank3
  2175  0120  0093               	movwf	19	;volatile
  2176                           
  2177                           ;memory.c: 186: EECON1bits.EEPGD = 0;
  2178  0121  1395               	bcf	21,7	;volsfr
  2179                           
  2180                           ;memory.c: 187: EECON1bits.CFGS = 0;
  2181  0122  1315               	bcf	21,6	;volsfr
  2182                           
  2183                           ;memory.c: 188: EECON1bits.WREN = 1;
  2184  0123  1515               	bsf	21,2	;volsfr
  2185                           
  2186                           ;memory.c: 190: GIEBitValue = INTCONbits.GIE;
  2187  0124  3000               	movlw	0
  2188  0125  1B8B               	btfsc	11,7	;volatile
  2189  0126  3001               	movlw	1
  2190  0127  0020               	movlb	0	; select bank0
  2191  0128  00AE               	movwf	DATAEE_WriteByte@GIEBitValue
  2192                           
  2193                           ;memory.c: 191: INTCONbits.GIE = 0;
  2194  0129  138B               	bcf	11,7	;volatile
  2195                           
  2196                           ;memory.c: 192: EECON2 = 0x55;
  2197  012A  3055               	movlw	85
  2198  012B  0023               	movlb	3	; select bank3
  2199  012C  0096               	movwf	22	;volsfr
  2200                           
  2201                           ;memory.c: 193: EECON2 = 0xAA;
  2202  012D  30AA               	movlw	170
  2203  012E  0096               	movwf	22	;volsfr
  2204                           
  2205                           ;memory.c: 194: EECON1bits.WR = 1;
  2206  012F  1495               	bsf	21,1	;volsfr
  2207  0130                     l228:	
  2208                           ;memory.c: 197: {
  2209                           
  2210                           ;memory.c: 196: while (EECON1bits.WR)
  2211                           
  2212  0130  1895               	btfsc	21,1	;volsfr
  2213  0131  2930               	goto	l228
  2214                           
  2215                           ;memory.c: 198: }
  2216                           ;memory.c: 200: EECON1bits.WREN = 0;
  2217  0132  1115               	bcf	21,2	;volsfr
  2218                           
  2219                           ;memory.c: 201: INTCONbits.GIE = GIEBitValue;
  2220  0133  0020               	movlb	0	; select bank0
  2221  0134  0C2E               	rrf	DATAEE_WriteByte@GIEBitValue,w
  2222  0135  1C03               	skipc
  2223  0136  138B               	bcf	11,7	;volatile
  2224  0137  1803               	skipnc
  2225  0138  178B               	bsf	11,7	;volatile
  2226  0139  0008               	return
  2227  013A                     __end_of_DATAEE_WriteByte:	
  2228                           
  2229                           	psect	text13
  2230  0195                     __ptext13:	
  2231 ;; *************** function _DATAEE_ReadByte *****************
  2232 ;; Defined at:
  2233 ;;		line 204 in file "mcc_generated_files/memory.c"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;  bAdd            1    wreg     unsigned char 
  2236 ;; Auto vars:     Size  Location     Type
  2237 ;;  bAdd            1    0[BANK0 ] unsigned char 
  2238 ;; Return value:  Size  Location     Type
  2239 ;;                  1    wreg      unsigned char 
  2240 ;; Registers used:
  2241 ;;		wreg
  2242 ;; Tracked objects:
  2243 ;;		On entry : 0/0
  2244 ;;		On exit  : 0/0
  2245 ;;		Unchanged: 0/0
  2246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2247 ;;      Params:         0       0       0       0
  2248 ;;      Locals:         0       1       0       0
  2249 ;;      Temps:          0       0       0       0
  2250 ;;      Totals:         0       1       0       0
  2251 ;;Total ram usage:        1 bytes
  2252 ;; Hardware stack levels used:    1
  2253 ;; Hardware stack levels required when called:    3
  2254 ;; This function calls:
  2255 ;;		Nothing
  2256 ;; This function is called by:
  2257 ;;		_main
  2258 ;; This function uses a non-reentrant model
  2259 ;;
  2260                           
  2261                           
  2262                           ;psect for function _DATAEE_ReadByte
  2263  0195                     _DATAEE_ReadByte:	
  2264                           
  2265                           ;incstack = 0
  2266                           ; Regs used in _DATAEE_ReadByte: [wreg]
  2267                           ;DATAEE_ReadByte@bAdd stored from wreg
  2268  0195  0020               	movlb	0	; select bank0
  2269  0196  00AC               	movwf	DATAEE_ReadByte@bAdd
  2270                           
  2271                           ;memory.c: 206: EEADRL = (bAdd & 0x0ff);
  2272  0197  082C               	movf	DATAEE_ReadByte@bAdd,w
  2273  0198  0023               	movlb	3	; select bank3
  2274  0199  0091               	movwf	17	;volatile
  2275                           
  2276                           ;memory.c: 207: EECON1bits.CFGS = 0;
  2277  019A  1315               	bcf	21,6	;volsfr
  2278                           
  2279                           ;memory.c: 208: EECON1bits.EEPGD = 0;
  2280  019B  1395               	bcf	21,7	;volsfr
  2281                           
  2282                           ;memory.c: 209: EECON1bits.RD = 1;
  2283  019C  1415               	bsf	21,0	;volsfr
  2284                           
  2285                           ;memory.c: 210: __nop();
  2286  019D  0000               	nop
  2287                           
  2288                           ;memory.c: 211: __nop();
  2289  019E  0000               	nop
  2290                           
  2291                           ;memory.c: 213: return (EEDATL);
  2292  019F  0023               	movlb	3	; select bank3
  2293  01A0  0813               	movf	19,w	;volatile
  2294  01A1  0008               	return
  2295  01A2                     __end_of_DATAEE_ReadByte:	
  2296                           
  2297                           	psect	intentry
  2298  0004                     __pintentry:	
  2299 ;; *************** function _INTERRUPT_InterruptManager *****************
  2300 ;; Defined at:
  2301 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  2302 ;; Parameters:    Size  Location     Type
  2303 ;;		None
  2304 ;; Auto vars:     Size  Location     Type
  2305 ;;		None
  2306 ;; Return value:  Size  Location     Type
  2307 ;;                  1    wreg      void 
  2308 ;; Registers used:
  2309 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2310 ;; Tracked objects:
  2311 ;;		On entry : 0/0
  2312 ;;		On exit  : 0/0
  2313 ;;		Unchanged: 0/0
  2314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2315 ;;      Params:         0       0       0       0
  2316 ;;      Locals:         0       0       0       0
  2317 ;;      Temps:          1       0       0       0
  2318 ;;      Totals:         1       0       0       0
  2319 ;;Total ram usage:        1 bytes
  2320 ;; Hardware stack levels used:    1
  2321 ;; Hardware stack levels required when called:    2
  2322 ;; This function calls:
  2323 ;;		_I2C_ISR
  2324 ;; This function is called by:
  2325 ;;		Interrupt level 1
  2326 ;; This function uses a non-reentrant model
  2327 ;;
  2328                           
  2329  0004                     _INTERRUPT_InterruptManager:	
  2330                           
  2331                           ;incstack = 0
  2332  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2333                           
  2334                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2335  0005  3180               	pagesel	$
  2336  0006  0020               	movlb	0	; select bank0
  2337  0007  087F               	movf	127,w
  2338  0008  00F4               	movwf	??_INTERRUPT_InterruptManager
  2339                           
  2340                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1 && PIE1bits.SSP1IE == 1 && PIR1bits.SS
      +                          P1IF == 1)
  2341  0009  1F0B               	btfss	11,6	;volatile
  2342  000A  2813               	goto	i1l122
  2343  000B  0021               	movlb	1	; select bank1
  2344  000C  1D91               	btfss	17,3	;volatile
  2345  000D  2813               	goto	i1l122
  2346  000E  0020               	movlb	0	; select bank0
  2347  000F  1D91               	btfss	17,3	;volatile
  2348  0010  2813               	goto	i1l122
  2349                           
  2350                           ;interrupt_manager.c: 55: {
  2351                           ;interrupt_manager.c: 56: I2C_ISR();
  2352  0011  3180  20F1         	fcall	_I2C_ISR
  2353  0013                     i1l122:	
  2354                           ;interrupt_manager.c: 58: else
  2355                           ;interrupt_manager.c: 59: {
  2356                           
  2357                           ;interrupt_manager.c: 57: }
  2358                           
  2359  0013  0874               	movf	??_INTERRUPT_InterruptManager,w
  2360  0014  0020               	movlb	0	; select bank0
  2361  0015  00FF               	movwf	127
  2362  0016  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2363  0017  0009               	retfie
  2364  0018                     __end_of_INTERRUPT_InterruptManager:	
  2365                           
  2366                           	psect	text15
  2367  00F1                     __ptext15:	
  2368 ;; *************** function _I2C_ISR *****************
  2369 ;; Defined at:
  2370 ;;		line 120 in file "mcc_generated_files/i2c.c"
  2371 ;; Parameters:    Size  Location     Type
  2372 ;;		None
  2373 ;; Auto vars:     Size  Location     Type
  2374 ;;  i2c_data        1    3[COMMON] unsigned char 
  2375 ;; Return value:  Size  Location     Type
  2376 ;;                  1    wreg      void 
  2377 ;; Registers used:
  2378 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2379 ;; Tracked objects:
  2380 ;;		On entry : 0/0
  2381 ;;		On exit  : 0/0
  2382 ;;		Unchanged: 0/0
  2383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2384 ;;      Params:         0       0       0       0
  2385 ;;      Locals:         1       0       0       0
  2386 ;;      Temps:          1       0       0       0
  2387 ;;      Totals:         2       0       0       0
  2388 ;;Total ram usage:        2 bytes
  2389 ;; Hardware stack levels used:    1
  2390 ;; Hardware stack levels required when called:    1
  2391 ;; This function calls:
  2392 ;;		_I2C_StatusCallback
  2393 ;; This function is called by:
  2394 ;;		_INTERRUPT_InterruptManager
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398                           
  2399                           ;psect for function _I2C_ISR
  2400  00F1                     _I2C_ISR:	
  2401                           
  2402                           ;i2c.c: 122: uint8_t i2c_data = 0x55;
  2403                           
  2404                           ;incstack = 0
  2405                           ; Regs used in _I2C_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2406  00F1  3055               	movlw	85
  2407  00F2  00F2               	movwf	??_I2C_ISR
  2408  00F3  0872               	movf	??_I2C_ISR,w
  2409  00F4  00F3               	movwf	I2C_ISR@i2c_data
  2410                           
  2411                           ;i2c.c: 128: PIR1bits.SSP1IF = 0;
  2412  00F5  0020               	movlb	0	; select bank0
  2413  00F6  1191               	bcf	17,3	;volatile
  2414                           
  2415                           ;i2c.c: 129: i2c_data = SSP1BUF;
  2416  00F7  0024               	movlb	4	; select bank4
  2417  00F8  0811               	movf	17,w	;volatile
  2418  00F9  00F2               	movwf	??_I2C_ISR
  2419  00FA  0872               	movf	??_I2C_ISR,w
  2420  00FB  00F3               	movwf	I2C_ISR@i2c_data
  2421                           
  2422                           ;i2c.c: 130: I2C_PWM_VALUE = i2c_data;
  2423  00FC  0873               	movf	I2C_ISR@i2c_data,w
  2424  00FD  00F2               	movwf	??_I2C_ISR
  2425  00FE  0872               	movf	??_I2C_ISR,w
  2426  00FF  00F7               	movwf	_I2C_PWM_VALUE
  2427                           
  2428                           ;i2c.c: 132: if(1 == SSP1STATbits.R_nW)
  2429  0100  1D14               	btfss	20,2	;volatile
  2430  0101  2909               	goto	i1l80
  2431                           
  2432                           ;i2c.c: 133: {
  2433                           ;i2c.c: 134: if((1 == SSP1STATbits.D_nA) && (1 == SSP1CON2bits.ACKSTAT))
  2434  0102  1A94               	btfsc	20,5	;volatile
  2435  0103  1F16               	btfss	22,6	;volatile
  2436  0104  2907               	goto	i1l1165
  2437                           
  2438                           ;i2c.c: 135: {
  2439                           ;i2c.c: 137: I2C_StatusCallback(I2C_SLAVE_READ_COMPLETED);
  2440  0105  3003               	movlw	3
  2441  0106  2912               	goto	L2
  2442  0107                     i1l1165:	
  2443                           ;i2c.c: 138: }
  2444                           
  2445                           
  2446                           ;i2c.c: 139: else
  2447                           ;i2c.c: 140: {
  2448                           ;i2c.c: 142: I2C_StatusCallback(I2C_SLAVE_READ_REQUEST);
  2449  0107  3001               	movlw	1
  2450  0108  2912               	goto	L2
  2451  0109                     i1l80:	
  2452                           ;i2c.c: 143: }
  2453                           ;i2c.c: 144: }
  2454                           
  2455                           
  2456                           ;i2c.c: 145: else if(0 == SSP1STATbits.D_nA)
  2457  0109  1A94               	btfsc	20,5	;volatile
  2458  010A  290D               	goto	i1l1169
  2459                           
  2460                           ;i2c.c: 146: {
  2461                           ;i2c.c: 150: I2C_StatusCallback(I2C_SLAVE_WRITE_REQUEST);
  2462  010B  3000               	movlw	0
  2463  010C  2912               	goto	L2
  2464  010D                     i1l1169:	
  2465                           ;i2c.c: 151: }
  2466                           
  2467                           
  2468                           ;i2c.c: 152: else
  2469                           ;i2c.c: 153: {
  2470                           ;i2c.c: 154: I2C_slaveWriteData = i2c_data;
  2471  010D  0873               	movf	I2C_ISR@i2c_data,w
  2472  010E  00F2               	movwf	??_I2C_ISR
  2473  010F  0872               	movf	??_I2C_ISR,w
  2474  0110  00F9               	movwf	_I2C_slaveWriteData	;volatile
  2475                           
  2476                           ;i2c.c: 157: I2C_StatusCallback(I2C_SLAVE_WRITE_COMPLETED);
  2477  0111  3002               	movlw	2
  2478  0112                     L2:	
  2479  0112  3180  20AB         	fcall	_I2C_StatusCallback
  2480                           
  2481                           ;i2c.c: 158: }
  2482                           ;i2c.c: 160: SSP1CON1bits.CKP = 1;
  2483  0114  0024               	movlb	4	; select bank4
  2484  0115  1615               	bsf	21,4	;volatile
  2485  0116  0008               	return
  2486  0117                     __end_of_I2C_ISR:	
  2487                           
  2488                           	psect	text16
  2489  00AB                     __ptext16:	
  2490 ;; *************** function _I2C_StatusCallback *****************
  2491 ;; Defined at:
  2492 ;;		line 186 in file "mcc_generated_files/i2c.c"
  2493 ;; Parameters:    Size  Location     Type
  2494 ;;  i2c_bus_stat    1    wreg     enum E2101
  2495 ;; Auto vars:     Size  Location     Type
  2496 ;;  i2c_bus_stat    1    1[COMMON] enum E2101
  2497 ;; Return value:  Size  Location     Type
  2498 ;;                  1    wreg      void 
  2499 ;; Registers used:
  2500 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  2501 ;; Tracked objects:
  2502 ;;		On entry : 0/0
  2503 ;;		On exit  : 0/0
  2504 ;;		Unchanged: 0/0
  2505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2506 ;;      Params:         0       0       0       0
  2507 ;;      Locals:         1       0       0       0
  2508 ;;      Temps:          1       0       0       0
  2509 ;;      Totals:         2       0       0       0
  2510 ;;Total ram usage:        2 bytes
  2511 ;; Hardware stack levels used:    1
  2512 ;; This function calls:
  2513 ;;		Nothing
  2514 ;; This function is called by:
  2515 ;;		_I2C_ISR
  2516 ;; This function uses a non-reentrant model
  2517 ;;
  2518                           
  2519                           
  2520                           ;psect for function _I2C_StatusCallback
  2521  00AB                     _I2C_StatusCallback:	
  2522                           
  2523                           ;incstack = 0
  2524                           ; Regs used in _I2C_StatusCallback: [wreg-fsr1h+status,2+status,0]
  2525                           ;I2C_StatusCallback@i2c_bus_state stored from wreg
  2526  00AB  00F1               	movwf	I2C_StatusCallback@i2c_bus_state
  2527                           
  2528                           ;i2c.c: 191: static uint8_t eepromAddress = 0;
  2529                           ;i2c.c: 192: static uint8_t slaveWriteType = SLAVE_NORMAL_DATA;
  2530                           ;i2c.c: 195: switch (i2c_bus_state)
  2531  00AC  28E2               	goto	i1l1113
  2532  00AD                     i1l94:	
  2533                           ;i2c.c: 196: {
  2534                           ;i2c.c: 197: case I2C_SLAVE_WRITE_REQUEST:
  2535                           
  2536                           
  2537                           ;i2c.c: 199: slaveWriteType = SLAVE_DATA_ADDRESS;
  2538  00AD  01F5               	clrf	I2C_StatusCallback@slaveWriteType
  2539  00AE  0AF5               	incf	I2C_StatusCallback@slaveWriteType,f
  2540                           
  2541                           ;i2c.c: 200: break;
  2542  00AF  0008               	return
  2543  00B0                     i1l1089:	
  2544                           ;i2c.c: 206: {
  2545                           ;i2c.c: 207: case SLAVE_DATA_ADDRESS:
  2546                           
  2547                           ;i2c.c: 205: switch(slaveWriteType)
  2548                           
  2549                           ;i2c.c: 203: case I2C_SLAVE_WRITE_COMPLETED:
  2550                           
  2551                           
  2552                           ;i2c.c: 208: eepromAddress = I2C_slaveWriteData;
  2553  00B0  0879               	movf	_I2C_slaveWriteData,w	;volatile
  2554  00B1  00F0               	movwf	??_I2C_StatusCallback
  2555  00B2  0870               	movf	??_I2C_StatusCallback,w
  2556  00B3  00F6               	movwf	I2C_StatusCallback@eepromAddress
  2557                           
  2558                           ;i2c.c: 209: break;
  2559  00B4  28CF               	goto	i1l1103
  2560  00B5                     i1l1091:	
  2561                           ;i2c.c: 213: default:
  2562                           
  2563                           ;i2c.c: 212: case SLAVE_NORMAL_DATA:
  2564                           
  2565                           
  2566                           ;i2c.c: 215: EEPROM_Buffer[eepromAddress++] = I2C_slaveWriteData;
  2567  00B5  0879               	movf	_I2C_slaveWriteData,w	;volatile
  2568  00B6  00F0               	movwf	??_I2C_StatusCallback
  2569  00B7  0876               	movf	I2C_StatusCallback@eepromAddress,w
  2570  00B8  3E20               	addlw	(low (_EEPROM_Buffer| 0))& (0+255)
  2571  00B9  0086               	movwf	6
  2572  00BA  0187               	clrf	7
  2573  00BB  0870               	movf	??_I2C_StatusCallback,w
  2574  00BC  0081               	movwf	1
  2575  00BD  3001               	movlw	1
  2576  00BE  00F0               	movwf	??_I2C_StatusCallback
  2577  00BF  0870               	movf	??_I2C_StatusCallback,w
  2578  00C0  07F6               	addwf	I2C_StatusCallback@eepromAddress,f
  2579                           
  2580                           ;i2c.c: 216: if(sizeof(EEPROM_Buffer) <= eepromAddress)
  2581  00C1  3008               	movlw	8
  2582  00C2  0276               	subwf	I2C_StatusCallback@eepromAddress,w
  2583  00C3  1C03               	skipc
  2584  00C4  28CF               	goto	i1l1103
  2585                           
  2586                           ;i2c.c: 217: {
  2587                           ;i2c.c: 218: eepromAddress = 0;
  2588  00C5  01F6               	clrf	I2C_StatusCallback@eepromAddress
  2589                           
  2590                           ;i2c.c: 222: }
  2591                           
  2592                           ;i2c.c: 219: }
  2593                           ;i2c.c: 220: break;
  2594  00C6  28CF               	goto	i1l1103
  2595  00C7                     i1l1101:	
  2596  00C7  0875               	movf	I2C_StatusCallback@slaveWriteType,w
  2597                           
  2598                           ; Switch size 1, requested type "space"
  2599                           ; Number of cases is 2, Range of values is 0 to 1
  2600                           ; switch strategies available:
  2601                           ; Name         Instructions Cycles
  2602                           ; simple_byte            7     4 (average)
  2603                           ; direct_byte           10     6 (fixed)
  2604                           ; jumptable            260     6 (fixed)
  2605                           ;	Chosen strategy is simple_byte
  2606  00C8  3A00               	xorlw	0	; case 0
  2607  00C9  1903               	skipnz
  2608  00CA  28B5               	goto	i1l1091
  2609  00CB  3A01               	xorlw	1	; case 1
  2610  00CC  1903               	skipnz
  2611  00CD  28B0               	goto	i1l1089
  2612  00CE  28B5               	goto	i1l1091
  2613  00CF                     i1l1103:	
  2614                           
  2615                           ;i2c.c: 224: slaveWriteType = SLAVE_NORMAL_DATA;
  2616  00CF  01F5               	clrf	I2C_StatusCallback@slaveWriteType
  2617                           
  2618                           ;i2c.c: 225: break;
  2619  00D0  0008               	return
  2620  00D1                     i1l1105:	
  2621                           ;i2c.c: 227: case I2C_SLAVE_READ_REQUEST:
  2622                           
  2623                           
  2624                           ;i2c.c: 228: SSP1BUF = EEPROM_Buffer[eepromAddress++];
  2625  00D1  0876               	movf	I2C_StatusCallback@eepromAddress,w
  2626  00D2  3E20               	addlw	(low (_EEPROM_Buffer| 0))& (0+255)
  2627  00D3  0086               	movwf	6
  2628  00D4  0187               	clrf	7
  2629  00D5  0801               	movf	1,w
  2630  00D6  0024               	movlb	4	; select bank4
  2631  00D7  0091               	movwf	17	;volatile
  2632  00D8  3001               	movlw	1
  2633  00D9  00F0               	movwf	??_I2C_StatusCallback
  2634  00DA  0870               	movf	??_I2C_StatusCallback,w
  2635  00DB  07F6               	addwf	I2C_StatusCallback@eepromAddress,f
  2636                           
  2637                           ;i2c.c: 229: if(sizeof(EEPROM_Buffer) <= eepromAddress)
  2638  00DC  3008               	movlw	8
  2639  00DD  0276               	subwf	I2C_StatusCallback@eepromAddress,w
  2640  00DE  1C03               	skipc
  2641  00DF  0008               	return
  2642                           
  2643                           ;i2c.c: 230: {
  2644                           ;i2c.c: 231: eepromAddress = 0;
  2645  00E0  01F6               	clrf	I2C_StatusCallback@eepromAddress
  2646                           
  2647                           ;i2c.c: 238: }
  2648                           
  2649                           ;i2c.c: 236: default:;
  2650                           
  2651                           ;i2c.c: 235: case I2C_SLAVE_READ_COMPLETED:
  2652                           
  2653                           ;i2c.c: 232: }
  2654                           ;i2c.c: 233: break;
  2655  00E1  0008               	return
  2656  00E2                     i1l1113:	
  2657  00E2  0871               	movf	I2C_StatusCallback@i2c_bus_state,w
  2658                           
  2659                           ; Switch size 1, requested type "space"
  2660                           ; Number of cases is 4, Range of values is 0 to 3
  2661                           ; switch strategies available:
  2662                           ; Name         Instructions Cycles
  2663                           ; simple_byte           13     7 (average)
  2664                           ; direct_byte           14     6 (fixed)
  2665                           ; jumptable            260     6 (fixed)
  2666                           ;	Chosen strategy is simple_byte
  2667  00E3  3A00               	xorlw	0	; case 0
  2668  00E4  1903               	skipnz
  2669  00E5  28AD               	goto	i1l94
  2670  00E6  3A01               	xorlw	1	; case 1
  2671  00E7  1903               	skipnz
  2672  00E8  28D1               	goto	i1l1105
  2673  00E9  3A03               	xorlw	3	; case 2
  2674  00EA  1903               	skipnz
  2675  00EB  28C7               	goto	i1l1101
  2676  00EC  3A01               	xorlw	1	; case 3
  2677  00ED  1903               	skipnz
  2678  00EE  28F0               	goto	i1l107
  2679  00EF  28F0               	goto	i1l107
  2680  00F0                     i1l107:	
  2681  00F0  0008               	return
  2682  00F1                     __end_of_I2C_StatusCallback:	
  2683  007E                     btemp	set	126	;btemp
  2684  007E                     int$flags	set	126
  2685  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         15
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80      9      22
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C_ISR
    _I2C_ISR->_I2C_StatusCallback

Critical Paths under _main in BANK0

    _main->_EPWM_LoadDutyValue
    _main->_writeEEPROMvalue
    _writeEEPROMvalue->_DATAEE_ReadByte

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     861
                                              4 BANK0      5     5      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                 _EPWM_LoadDutyValue
                  _SYSTEM_Initialize
                  _returnEEPROMvalue
                   _writeEEPROMvalue
 ---------------------------------------------------------------------------------
 (1) _writeEEPROMvalue                                     3     2      1     293
                                              1 BANK0      3     2      1
                    _DATAEE_ReadByte (ARG)
 ---------------------------------------------------------------------------------
 (1) _returnEEPROMvalue                                    3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _EPWM_Initialize
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EPWM_LoadDutyValue                                   4     2      2     216
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _DATAEE_WriteByte                                     3     2      1     253
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           1     1      0      68
                                              4 COMMON     1     1      0
                            _I2C_ISR
 ---------------------------------------------------------------------------------
 (5) _I2C_ISR                                              2     2      0      68
                                              2 COMMON     2     2      0
                 _I2C_StatusCallback
 ---------------------------------------------------------------------------------
 (6) _I2C_StatusCallback                                   2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _DATAEE_WriteByte
   _EPWM_LoadDutyValue
   _SYSTEM_Initialize
     _EPWM_Initialize
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_StartTimer
     _WDT_Initialize
   _returnEEPROMvalue
   _writeEEPROMvalue
     _DATAEE_ReadByte (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   _I2C_ISR
     _I2C_StatusCallback

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      20       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      9      16       6       27.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      20      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sun Jun 11 20:38:48 2017

                        __CFG_CP$OFF 0000                          __CFG_LVP$ON 0000  
                                l228 0130                                  l269 0097  
                                _PR2 001B                                  u345 014B  
                       __CFG_CPD$OFF 0000                                  u387 00A5  
                    __end_of_I2C_ISR 0117                      _TMR2_Initialize 01B9  
                       __CFG_BORV$LO 0000                                  wreg 0009  
                       __CFG_IESO$ON 0000                                 l1363 004D  
                               l1373 007C                                 _LATA 010C  
                               i1l80 0109                                 i1l94 00AD  
                               _TMR2 001A                                 _WPUA 020C  
                       __CFG_WRT$OFF 0000                        __CFG_FCMEN$ON 0000  
                               _main 0030                                 fsr1h 0007  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                        __CFG_BOREN$ON 0000  
                               start 0018                        __CFG_MCLRE$ON 0000  
          __size_of_DATAEE_WriteByte 0023                        __CFG_PLLEN$ON 0000  
     __size_of_OSCILLATOR_Initialize 0005        __end_of_OSCILLATOR_Initialize 01C8  
                              ?_main 0070                        __CFG_WDTE$OFF 0000  
                              _T2CON 001C                                i1l122 0013  
                              i1l107 00F0                                _TRISA 008C  
                    _DATAEE_ReadByte 0195                       _WDT_Initialize 01C8  
                              status 0003                                wtemp0 007E  
                    _TMR2_StartTimer 01CC                      __initialization 001A  
                      _I2C_PWM_VALUE 0077                         __end_of_main 00AB  
                          ??_I2C_ISR 0072              __end_of_TMR2_Initialize 01C3  
        ?_INTERRUPT_InterruptManager 0070                               ??_main 0030  
             __end_of_WDT_Initialize 01CC                               _EEADRH 0192  
                             _EEADRL 0191                               _CCPR1H 0292  
                             _EEDATH 0194                               _CCPR1L 0291  
                             _EEDATL 0193                               _EECON2 0196  
                             _APFCON 011D                               _ANSELA 018C  
                             i1l1101 00C7                               i1l1103 00CF  
                             i1l1105 00D1                               i1l1113 00E2  
                             i1l1091 00B5                               i1l1165 0107  
                             i1l1089 00B0                               i1l1169 010D  
                             _OSCCON 0099                               _WDTCON 0097  
                     __CFG_PWRTE$OFF 0000                     _writeEEPROMvalue 01AE  
                  _returnEEPROMvalue 0188                       __CFG_STVREN$ON 0000  
                 ?_returnEEPROMvalue 0070                   _I2C_StatusCallback 00AB  
            __size_of_I2C_Initialize 000F              __end_of_DATAEE_ReadByte 01A2  
                       __pdataCOMMON 0079                  ??_returnEEPROMvalue 002C  
           __size_of_EPWM_Initialize 000C                      ?_WDT_Initialize 0070  
                ?_I2C_StatusCallback 0070              __end_of_TMR2_StartTimer 01CF  
        __size_of_EPWM_LoadDutyValue 001C                    _SYSTEM_Initialize 0156  
            __end_of__initialization 002C                   ?_SYSTEM_Initialize 0070  
          __end_of_returnEEPROMvalue 0195                 ??_I2C_StatusCallback 0070  
             writeEEPROMvalue@adress 002F                       __pcstackCOMMON 0070  
                ??_SYSTEM_Initialize 002C                     _DATAEE_WriteByte 0117  
                   ?_TMR2_Initialize 0070                       _OPTION_REGbits 0095  
          __end_of_SYSTEM_Initialize 0168                           __pbssBANK0 0020  
                         __pnvCOMMON 0078                           __pmaintext 0030  
                         __pintentry 0004                              _CCP1CON 0293  
                            _I2C_ISR 00F1                              _ECCP1AS 0295  
             returnEEPROMvalue@value 002E                     ?_DATAEE_ReadByte 0070  
   I2C_StatusCallback@slaveWriteType 0075                              _OSCTUNE 0098  
                            _PWM1CON 0294                              _SSP1ADD 0212  
                            _SSP1BUF 0211                              _SSP1MSK 0213  
                   ?_TMR2_StartTimer 0070                    ??_EPWM_Initialize 002C  
               DATAEE_WriteByte@bAdd 002D           __size_of_returnEEPROMvalue 000D  
                     _I2C_Initialize 0179                              __ptext1 01AE  
                            __ptext2 0188                              __ptext3 0156  
                            __ptext4 01C8                              __ptext5 01B9  
                            __ptext6 01CC                              __ptext7 0168  
                            __ptext8 01C3                              __ptext9 0179  
                         _dutyValueH 0078                           _dutyValueL 0035  
              _OSCILLATOR_Initialize 01C3                            _T2CONbits 001C  
           __end_of_writeEEPROMvalue 01B9             ??_PIN_MANAGER_Initialize 002C  
         __size_of_SYSTEM_Initialize 0012                 end_of_initialization 002C  
        EPWM_LoadDutyValue@dutyValue 002C               __end_of_I2C_Initialize 0188  
                   ??_WDT_Initialize 002C                     __CFG_FOSC$INTOSC 0000  
           __end_of_DATAEE_WriteByte 013A                      ?_I2C_Initialize 0070  
                      __pidataCOMMON 01CF               ?_OSCILLATOR_Initialize 0070  
                start_initialization 001A      __size_of_PIN_MANAGER_Initialize 0011  
         __end_of_EPWM_LoadDutyValue 0156                  DATAEE_ReadByte@bAdd 002C  
        __size_of_I2C_StatusCallback 0046                        _EEPROM_Buffer 0020  
                           ?_I2C_ISR 0070                      _EPWM_Initialize 01A2  
                        __pbssCOMMON 0075                            ___latbits 0001  
                      __pcstackBANK0 002C             __size_of_TMR2_Initialize 000A  
                          __pnvBANK0 0035               _PIN_MANAGER_Initialize 0168  
       ??_INTERRUPT_InterruptManager 0074                    ?_writeEEPROMvalue 002D  
            returnEEPROMvalue@adress 002D                   ??_writeEEPROMvalue 002E  
           __size_of_DATAEE_ReadByte 000D                            _dutyValue 0028  
                           _LATAbits 010C                             _PIE1bits 0091  
           __size_of_TMR2_StartTimer 0003  __size_of_INTERRUPT_InterruptManager 0014  
                           _PIR1bits 0011                             _SSP1CON1 0215  
                           _SSP1CON2 0216                             _SSP1CON3 0217  
                           _PSTR1CON 0296              __end_of_EPWM_Initialize 01AE  
                           _SSP1STAT 0214      I2C_StatusCallback@eepromAddress 0076  
                   __size_of_I2C_ISR 0026                DATAEE_WriteByte@bData 002C  
                  ?_DATAEE_WriteByte 002C                    ??_TMR2_Initialize 002C  
                 ??_DATAEE_WriteByte 002D                           _EECON1bits 0195  
                   ??_I2C_Initialize 002C              ??_OSCILLATOR_Initialize 002C  
                    I2C_ISR@i2c_data 0073                 writeEEPROMvalue@data 002D  
                           __ptext10 01A2                             __ptext11 013A  
                           __ptext12 0117                             __ptext13 0195  
                           __ptext15 00F1                             __ptext16 00AB  
                       _SSP1CON1bits 0215                         _SSP1CON2bits 0216  
        DATAEE_WriteByte@GIEBitValue 002E                        __size_of_main 007B  
                  ??_DATAEE_ReadByte 002C                   _EPWM_LoadDutyValue 013A  
                           int$flags 007E                     ?_EPWM_Initialize 0070  
                  ??_TMR2_StartTimer 002C   __end_of_INTERRUPT_InterruptManager 0018  
         _INTERRUPT_InterruptManager 0004                  ?_EPWM_LoadDutyValue 002C  
                       _SSP1STATbits 0214                   _I2C_slaveWriteData 0079  
                         _INTCONbits 000B              __size_of_WDT_Initialize 0004  
               ??_EPWM_LoadDutyValue 002E                             intlevel1 0000  
            ?_PIN_MANAGER_Initialize 0070                    __CFG_CLKOUTEN$OFF 0000  
         __end_of_I2C_StatusCallback 00F1      I2C_StatusCallback@i2c_bus_state 0071  
     __end_of_PIN_MANAGER_Initialize 0179                _TMR2_InterruptHandler 002A  
          __size_of_writeEEPROMvalue 000B  
